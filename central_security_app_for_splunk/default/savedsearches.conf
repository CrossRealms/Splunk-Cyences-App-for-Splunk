# Categaries #
# 1. Ransomware
# 2. Endpoint Compromise
# 3. Network Compromise
# 4. Scanning
# 5. Windows
# 6. O365

# ============
# Ransomware
# ============
# Alerts
[Ransomware - Endpoint Compromise - Fake Windows Processes]
disabled = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 3,13,23,33,43,53 * * * *
description = Identify the processes which try to fake itself as a Windows process.\
\
Data Collection - TA-microsoft-sysmon - [WinEventLog://Microsoft-Windows-Sysmon/Operational] - EventCode=1
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = | tstats `cs_summariesonly_endpoint` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_path !="C:\\Windows\\System32*" Processes.process_path !="C:\\Windows\\SysWOW64*" _index_earliest=-11m _index_latest=now by Processes.user Processes.dest Processes.process_name Processes.process_id Processes.process_path Processes.parent_process_name Processes.process_hash \
| `drop_dm_object_name("Processes")` \
| `security_content_ctime(firstTime)` \
| `security_content_ctime(lastTime)` \
| `is_windows_system_file` \
| `system_processes_run_from_unexpected_locations_filter`


[Ransomware - Endpoint Compromise - Network Compromise - TOR Traffic]
disabled = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 5,15,25,35,45,55 * * * *
description = This search will look for firewall data (Network_Traffic datamodel) to detect TOR traffic.\
\
Data Collection - Any Firewall data that fits with CIM definition.\
- The search will look for app=tor value.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = | tstats `cs_summariesonly_network_traffic` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where _index_earliest=-11m@m _index_latest=now All_Traffic.app=tor AND All_Traffic.action=allowed by All_Traffic.src_ip All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.action | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name("All_Traffic")` | `tor_traffic_filter`

[Ransomware - Common Ransomware File Extensions]
disabled = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 7,17,27,37,47,57 * * * *
description = Based on lookup from ES Content Update App, this search will try to identify Ransomware's common file extensions\
\
Data Collection - TA-microsoft-sysmon - WinEventLog://Microsoft-Windows-Sysmon/Operational stanza
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = | tstats `cs_summariesonly_endpoint` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name where _index_earliest=-11m@m _index_latest=now | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name "(?<file_extension>\.[^\.]+)$" | `ransomware_extensions` | `common_ransomware_extensions_filter`

[Ransomware - Scheduled tasks used in BadRabbit ransomware]
disabled = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 9,19,29,39,49,59 * * * *
description = The query tried to identify the BadRabbit ransomware based on the processes data. It tries to see data from the schtasks.exe process and some other keywords.\
\
Data Collection - TA-microsoft-sysmon - WinEventLog://Microsoft-Windows-Sysmon/Operational stanza - EventCode=1 (uses data-model query)
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = | tstats `cs_summariesonly_endpoint` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process  from datamodel=Endpoint.Processes where _index_earliest=-11m@m _index_latest=now Processes.process_name=schtasks.exe (Processes.process= "*create*"  OR Processes.process= "*delete*") by Processes.parent_process Processes.process_name Processes.user | `drop_dm_object_name("Processes")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | search (process=*rhaegal* OR process=*drogon* OR *viserion_*) | `scheduled_tasks_used_in_badrabbit_ransomware_filter`

[Ransomware - Common Ransomware Notes]
disabled = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 8,18,28,38,48,58 * * * *
description = Based on lookup from ES Content Update App, this search will try to identify common ransomware notes.\
\
Data Collection - TA-microsoft-sysmon - WinEventLog://Microsoft-Windows-Sysmon/Operational stanza
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = | tstats `cs_summariesonly_endpoint` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name where _index_earliest=-11m@m _index_latest=now | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name "(?<file_extension>\.[^\.]+)$" | `ransomware_notes` | `common_ransomware_notes_filter`

[Ransomware - Endpoint Compromise - USN Journal Deletion on Windows]
disabled = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 2,12,22,32,42,52 * * * *
description = The fsutil.exe application is a legitimate Windows utility used to perform tasks related to the file allocation table (FAT) and NTFS file systems. The update sequence number (USN) change journal provides a log of all changes made to the files on the disk. This search looks for fsutil.exe deleting the USN journal.\
\
Data Collection - TA-microsoft-sysmon - WinEventLog://Microsoft-Windows-Sysmon/Operational stanza - EventCode=1 (uses data-model query)
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = | tstats `cs_summariesonly_endpoint` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fsutil.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search process="*deletejournal*" AND process="*usn*" | `usn_journal_deletion_filter`

[Ransomware - Windows - Windows Event Log Cleared]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 1,11,21,31,41,51 * * * *
description = Check for WinEventLog to see events that show WinEventLogs are cleared.\
\
Data Collection - Splunk_TA_Windows - WinEventLog://Security stanza and WinEventLog://System stanza\
\
False Positive - The administrator might have intentionally cleared the logs.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = (`cs_wineventlog_security` (EventID=1102 OR EventID=1100)) OR (`cs_wineventlog_system` EventID=104) _index_earliest=-11m _index_earliest=now | stats count min(_time) as firstTime max(_time) as lastTime by EventID dest | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_event_log_cleared_filter`

# ================
# Windows / AD
# ================
# Reports
[Windows - Hosts Lookup Gen]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 3 * * 0
description = Supporting Report for Windows update check alert (Runs every Sunday at 3 AM) - Generates the host list in the lookup
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = `cs_wineventlog_system` | dedup host | table host | append [| inputlookup all_windows_hosts.csv] | dedup host | outputlookup all_windows_hosts.csv

# Alerts
[Windows - Hosts Missing Update]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 15 3 15 * *
description = Which hosts are not having the latest update from last month (Runs 15th of every month and check update for previous month)\
\
Data collection - WinEventLog System events (EventCode=19)
dispatch.earliest_time = -60d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = | set diff [| inputlookup all_windows_hosts.csv]\
[| search `cs_wineventlog_system` EventCode=19 | eval lastmonth=strftime(relative_time(now(),"-1mon"),"%Y-%m") | where like(package_title, lastmonth."%") | dedup host | table host]\
| `cs_windows_host_missing_update_filter`

[Windows - Endpoint Compromise - Windows Firewall Disabled Event]
disabled = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
description = Windows Firewall Disabled Event from WinEventLog\
\
Data Collection - WinEventLog Security Events (EventCode=4950)
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = `cs_wineventlog_security` EventCode=4950 SettingType="Enable Windows Defender Firewall" SettingValue=No | table host, EventCode, ProfileChanged, SettingType, SettingValue\
| `cs_windows_firewall_disabled_filter`


# ==============
# Scanning
# ==============
[Scanning - Network Compromise - Basic Scanning]
disabled = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
description = Looks for hosts that reach out to more than 500 hosts, or more than 100 ports in a short period of time, indicating scanning.\
\
Data Collection - Palo Alto Networks firewalls, and with any other device that uses the Splunk common information model.
dispatch.earliest_time = -61m@m
dispatch.latest_time = -1m@m
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = central_security_app_for_splunk
request.ui_dispatch_view = search
search = index=* ( (tag=network tag=communicate) OR sourcetype=pan*traffic OR sourcetype=opsec OR sourcetype=cisco:asa) \
| stats dc(dest_port) as num_dest_port dc(dest_ip) as num_dest_ip by src_ip\
| where num_dest_port > 100 OR num_dest_ip > 500\
| `cs_scanning_basic_scanning_filter`
