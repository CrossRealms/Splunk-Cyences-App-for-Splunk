<form theme="dark" script="cs_asset_intelligence.js">
  <label>Asset Intelligence</label>
  <search id="base_device_master_table">
    <query>| inputlookup cs_device_master_table
| eval lansweeper_os =AssetType." ".OSVersion." ".AssetVersion | eval os=coalesce(tenable_os, QUALYS_OS, lansweeper_os)
| eval mac_address=mvappend(lansweeper_mac_address, crowdstrike_mac_address, tenable_mac_address)
| eval user=mvappend(lansweeper_user, sophos_user, crowdstrike_user)
| eval lansweeper_status=case(isnull(lansweeper_last_event), "-", 1==1, AssetState)
| eval qualys_status=case(isnull(qualys_last_event), "-", ACTIVE_SEVERITY_5&gt;0, "Red", ACTIVE_SEVERITY_4&gt;0, "Orange", ACTIVE_SEVERITY_3&gt;0, "Yellow", 1==1, "Green")
| eval tenable_status=case(isnull(tenable_last_event), "-", critical_active_vuln&gt;0, "Red", high_active_vuln&gt;0, "Orange", medium_active_vuln&gt;0, "Yellow", 1==1, "Green")
| eval defender_status=case(isnull(defender_last_event), "-", 1==1, RTP_state)
| eval sophos_status=case(isnull(sophos_last_event), "-", isnull(sophos_status), "RTP Enabled", 1==1, sophos_status)
| eval crowdstrike_status=if(isnull(crowdstrike_last_event), "-", "Present")</query>
    <earliest>0</earliest>
    <latest>now</latest>
  </search>
  <search base="base_device_master_table" id="show_hide_search">
    <query>| stats sum(lansweeper_last_event) as lansweeper, sum(qualys_last_event) as qualys, sum(tenable_last_event) as tenable, sum(sophos_last_event) as sophos, sum(defender_last_event) as defender, sum(crowdstrike_last_event) as crowdstrike</query>
  </search>
  <fieldset submitButton="false"></fieldset>
  <row>
    <panel>
      <input type="text" token="tkn_ip_tmp">
        <label>IP Address</label>
        <default></default>
      </input>
      <input type="text" token="tkn_host_tmp">
        <label>Host Name</label>
        <default></default>
      </input>
      <input type="text" token="tkn_user_tmp">
        <label>User</label>
        <default></default>
      </input>
      <input type="radio" token="tkn_filter_condition">
        <label>Condition</label>
        <choice value="OR">OR</choice>
        <choice value="AND">AND</choice>
        <default>OR</default>
      </input>
      <html>
        <p>Use * (wildcard) if you are not sure of complete usename. Like, *pcarter*, will match with usernames like 'pcarter', 'CRAD\pcarter', 'pcarter_admin', etc.</p>
        <p>Try not to use wildcard in IP address or Hostname to see acurate and complete information in the dashboard.</p>
      </html>
    </panel>
  </row>
  <row depends="$tkn_filter_main$">
    <panel>
      <title>Device Master Table $tkn_filter_main_label$</title>
      <table>
        <search base="base_device_master_table">
          <query>table host, ip, os, mac_address, user $tkn_tablefields_lansweeper$ $tkn_tablefields_qualys$ $tkn_tablefields_tenable$ $tkn_tablefields_sophos$ $tkn_tablefields_defender$ $tkn_tablefields_crowdstrike$ | search $tkn_filter_main$</query>
        </search>
        <option name="count">5</option>
        <option name="drilldown">cell</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <format type="color" field="lansweeper_status">
          <colorPalette type="map">{"-": #363030}</colorPalette>
        </format>
        <format type="color" field="qualys_status">
          <colorPalette type="map">{"Green": #03991a, "Yellow": #cbcf00, "Orange": #ff8c00, "Red": #a3030b, "-": #363030}</colorPalette>
        </format>
        <format type="color" field="ACTIVE">
          <colorPalette type="list">[#03991a,#a3030b]</colorPalette>
          <scale type="threshold">1</scale>
        </format>
        <format type="color" field="tenable_status">
          <colorPalette type="map">{"Green": #03991a, "Yellow": #cbcf00, "Orange": #ff8c00, "Red": #a3030b, "-": #363030}</colorPalette>
        </format>
        <format type="color" field="active_vuln">
          <colorPalette type="list">[#03991a,#a3030b]</colorPalette>
          <scale type="threshold">1</scale>
        </format>
        <format type="color" field="defender_status">
          <colorPalette type="map">{"Enabled": #03991a, "Disabled": #a3030b, "-": #363030}</colorPalette>
        </format>
        <format type="color" field="sophos_status">
          <colorPalette type="map">{"RTP Enabled": #03991a, "RTP Disabled": #a3030b, "Service not Running": #a3030b, "-": #363030}</colorPalette>
        </format>
        <format type="color" field="crowdstrike_status">
          <colorPalette type="map">{"Present": #03991a, "-": #363030}</colorPalette>
        </format>
        <drilldown>
          <set token="tkn_drilldown_host">$row.host$</set>
          <set token="tkn_drilldown_ip">$row.ip$</set>
          <eval token="tkn_drilldown_user">if(isnull($row.user$), "-", $row.user$)</eval>
        </drilldown>
      </table>
      <html>
        <p>"-"(hyphen) means data not present in that category for that host.</p>
        <p>Table will automatically hide columns for which no device has data.</p>
        <p>Qualys Status: Red if there is any severity 5 (Urgent) active vulnerability, Orange if there is any severity 4 (Critical) active vulnerability, Yellow if there is any severity 3 (Serious) active vulnerability, Green if there is no Urgent, Critical or Serious active vulnerabilities present.</p>
        <p>Tenable Status: Red if there is any critical active severity vulnerability, Orange if there is any high active severity vulnerability, Yellow if there is any medium active severity vulnerability, Green if there is no critical, high or medium active vulnerabilities present.</p>
      </html>
    </panel>
  </row>
  <row depends="$tkn_show_hide_lansweeper$">
    <panel>
      <title>Lansweeper $tkn_filter_main_label$</title>
      <table>
        <search>
          <query>`cs_lansweeper` `cs_lansweeper_timerange` | rename IPAddress as ip, Name as host, Username as user | search $tkn_filter_main$ | eval id=coalesce(AssetID,id) | dedup id
| rename AssetTypename as Type, Statename as State, Userdomain as Domain, AssetGroup as GroupName, Mac as MacAddress, OScode as OSVersion, Firstseen as FirstSeen, Lastseen as LastSeen, LastChanged as LastChanged 
| table id, ip, host, user, MacAddress, State, Type, OS, OSVersion, OSRelease, OSname, SystemVersion, version, FQDN, GroupName, IPLocation, Domain, AssetDomain, Memory, Processor, Manufacturer, Model, Serialnumber, BuildNumber, LsAgentVersion, LastLsAgent, FirstSeen, LastSeen, LastChanged, Description</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row depends="$tkn_show_hide_qualys$">
    <panel>
      <title>Qualys Host Summary $tkn_filter_ip_only_label$</title>
      <event>
        <search>
          <query>`cs_qualys_hostsummary` IP=$tkn_filter_ip_only$ `cs_qualys_timerange` | dedup HOST_ID</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
        <option name="list.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </event>
    </panel>
    <panel>
      <title>Qualys Vulnerabilities</title>
      <table>
        <search>
          <query>`cs_qualys_vuln` IP=$tkn_filter_ip_only$ `cs_qualys_timerange` | dedup HOST_ID, QID
| eval status_id=if(STATUS="NEW" OR STATUS="ACTIVE" OR STATUS="RE-OPENED", 1, 0)
| sort - status_id, - SEVERITY, HOST_ID | rename vuln_category as CATEGORY, vendor_severity as SEVERITY
| table HOST_ID, QID, SEVERITY, signature, CATEGORY, STATUS, TYPE, PUBLISHED_DATETIME, PATCHABLE, TIMES_FOUND, VULN_TYPE, PROTOCOL, PORT, PCI_FLAG, LAST_FOUND_DATETIME, cve</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="wrap">false</option>
        <format type="color" field="SEVERITY">
          <colorPalette type="map">{"Urgent":#c90000, "Critical": #d96704, "Serious" : #dbb300}</colorPalette>
        </format>
        <format type="color" field="STATUS">
          <colorPalette type="map">{"ACTIVE":#c90000}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row depends="$tkn_show_hide_qualys$">
    <panel>
      <title>Network Traffic to/from Vulnerable Ports (Detected from Qualys)</title>
      <input type="time" token="tkn_timeRange_qualys">
        <label></label>
        <default>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <viz type="missile_map.missile_map">
        <search>
          <query>| tstats `cs_summariesonly_network_traffic` count from datamodel=Network_Traffic where [| search `cs_qualys_vuln` IP=$tkn_filter_ip_only$ `cs_qualys_timerange` STATUS="ACTIVE" PORT=*  | stats count by IP PORT | eval field = "(All_Traffic.src_ip = \"".IP."\" AND All_Traffic.src_port = \"".PORT."\") OR (All_Traffic.dest_ip = \"".IP."\" AND All_Traffic.dest_port = \"".PORT."\")"  | appendpipe [| stats count | where count==0 | eval field="false()" | fields field]  | fields field | return 10000 $field ] by All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.src_ip All_Traffic.src_port  | `drop_dm_object_name(All_Traffic)` | eventstats min(count) as min_value, max(count) as max_value | eval weight=(5*(count-min_value))/(max_value-min_value)+1 | `cs_network_animate_traffic_map` | eval pulse_at_start = if(src_ip==$tkn_filter_ip_only$,"true","false") | eval pulse_at_end = if(dest_ip==$tkn_filter_ip_only$,"true","false") | eval color= "#dc4e41" | iplocation src_ip | `cs_network_generate_location_for_internal_network(src_ip)` | rename lat as start_lat, lon as start_lon | iplocation dest_ip | ` cs_network_generate_location_for_internal_network(dest_ip)` | rename lat as end_lat, lon as end_lon</query>
          <earliest>$tkn_timeRange_qualys.earliest$</earliest>
          <latest>$tkn_timeRange_qualys.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </viz>
    </panel>
  </row>
  <row depends="$tkn_show_hide_tenable$">
    <panel>
      <title>Tenable Summary $tkn_filter_ip_host_label$</title>
      <table>
        <search>
          <query>| inputlookup cs_tenable_vuln | search $tkn_filter_ip_host$
    | stats count, count(eval(vul_state="open" OR vul_state="reopened")) as active, count(eval(vul_state="fixed")) as fixed by ip, host, vul_severity 
    | stats sum(count) as total_vuln, sum(eval(if(vul_severity="informational", count, 0))) as info, sum(eval(if(vul_severity="low", count, 0))) as low, sum(eval(if(vul_severity="medium", count, 0))) as medium, sum(eval(if(vul_severity="high", count, 0))) as high, sum(eval(if(vul_severity="critical", count, 0))) as critical, sum(active) as active_vuln, sum(eval(if(vul_severity="informational", active, 0))) as info_active, sum(eval(if(vul_severity="low", active, 0))) as low_active, sum(eval(if(vul_severity="medium", active, 0))) as medium_active, sum(eval(if(vul_severity="high", active, 0))) as high_active, sum(eval(if(vul_severity="critical", active, 0))) as critical_active, sum(fixed) as fixed_vuln, sum(eval(if(vul_severity="informational", fixed, 0))) as info_fixed, sum(eval(if(vul_severity="low", fixed, 0))) as low_fixed, sum(eval(if(vul_severity="medium", fixed, 0))) as medium_fixed, sum(eval(if(vul_severity="high", fixed, 0))) as high_fixed, sum(eval(if(vul_severity="critical", fixed, 0))) as critical_fixed by ip, host 
    | append [| inputlookup cs_tenable_assets | search $tkn_filter_ip_host$]
    | stats values(*) as * by ip, host
    | fields - created_at, first_*, has_plugin_results
    | table ip, host, tenable_all_ips, tenable_mac_address, tenable_os, tenable_state, total_vuln, active_vuln, critical_active, high_active, fixed_vuln, medium_active, low_active, info_active, last_seen, has_agent, tenable_network_name, tenable_fqdn, tenable_netbios, last_*, *
    | eval critical_active=if(critical_active=0, null(), critical_active), high_active=if(high_active=0, null(), high_active) | search () ()| sort - active_vuln
| eval asset_name=host." - ".ip
| fields - host, ip
| transpose header_field=asset_name include_empty=false column_name="Fields"</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel>
      <title>Tenable Vulnerabilities</title>
      <table>
        <search>
          <query>| inputlookup cs_tenable_vuln | search $tkn_filter_ip_host$
| eval vul_state_id = if(vul_state="open" OR vul_state="reopened", 1, 0)
| sort -vul_state_id, -vul_severity_id, +ip
| table ip, host, vul_id, vul_severity, vul_name, vul_state, vul_family, vul_has_patch, vul_port, vul_protocol, vul_risk_factor, vul_type, vul_version, last_fixed, last_found, vul_cpe, vul_in_the_news, vul_synopsis, vul_description</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="wrap">false</option>
        <format type="color" field="vul_severity">
          <colorPalette type="map">{"critical":#c90000, "high": #d96704, "medium" : #dbb300}</colorPalette>
        </format>
        <format type="color" field="vul_status">
          <colorPalette type="map">{"open":#c90000, "reopened":#c90000}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row depends="$tkn_show_hide_tenable$">
    <panel>
      <title>Network Traffic to/from Vulnerable Ports (Detected from Tenable)</title>
      <input type="time" token="tkn_timeRange_tenable">
        <label></label>
        <default>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <viz type="missile_map.missile_map">
        <search>
          <query>| tstats `cs_summariesonly_network_traffic` count from datamodel=Network_Traffic where [| inputlookup cs_tenable_vuln | search ($tkn_filter_ip_host$ AND (vul_state="open" OR vul_state="reopened") AND vul_port!=0) | stats count by ip vul_port  | eval field = "(All_Traffic.src_ip = \"".ip."\" AND All_Traffic.src_port = \"".vul_port."\") OR (All_Traffic.dest_ip = \"".ip."\" AND All_Traffic.dest_port = \"".vul_port."\")" | appendpipe [| stats count | where count==0 | eval field="false()" | fields field] | fields field | return 10000 $field ] by All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.src_ip All_Traffic.src_port | `drop_dm_object_name(All_Traffic)` | eventstats min(count) as min_value, max(count) as max_value | eval weight=(5*(count-min_value))/(max_value-min_value)+1| `cs_network_animate_traffic_map` | appendpipe [| inputlookup cs_tenable_vuln | search ($tkn_filter_ip_host$) | fields ip | stats values(ip) as ip] | eventstats values(ip) as ip | eval pulse_at_start = if(isnotnull(mvfind(src_ip, ip)),"true","false") | eval pulse_at_end = if(isnotnull(mvfind(dest_ip, ip)),"true","false")| eval color= "#dc4e41" | iplocation src_ip | `cs_network_generate_location_for_internal_network(src_ip)` | rename lat as start_lat, lon as start_lon | iplocation dest_ip | `cs_network_generate_location_for_internal_network(dest_ip)` | rename lat as end_lat, lon as end_lon </query>
          <earliest>$tkn_timeRange_tenable.earliest$</earliest>
          <latest>$tkn_timeRange_tenable.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </viz>
    </panel>
  </row>
  <row>
    <panel>
      <title>Alerts</title>
      <input type="time" token="tkn_timeRange_alerts">
        <label></label>
        <default>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <table>
        <title>Alerts that involving $tkn_filter_values_only_label$</title>
        <search>
          <query>`cs_cyences_index` $tkn_filter_values_only$
| fields - _raw, search_name, category, info_min_time, info_max_time, info_search_time, search_now, timestartpos, timeendpos, eventtype, linecount, splunk_server, splunk_server_group, tag, "tag::*", date_*, host, index, source, sourcetype
| rename * AS X_*_NEW | foreach X_*_NEW [ eval &lt;&lt;MATCHSTR&gt;&gt;=&lt;&lt;FIELD&gt;&gt; ] | fields - X_*_NEW 
| rename orig_* as *  | table _time, alert_name, *
| sort alert_name, -_time</query>
          <earliest>$tkn_timeRange_alerts.earliest$</earliest>
          <latest>$tkn_timeRange_alerts.latest$</latest>
        </search>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Inbound and Outbound Traffic $tkn_filter_ip_only_label$</title>
      <input type="time" token="tkn_timeRange_network_traffic">
        <label></label>
        <default>
          <earliest>-4h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <map>
        <search>
          <query>| tstats `cs_summariesonly_network_traffic` count as inbound from datamodel=Network_Traffic where All_Traffic.dest_ip=$tkn_filter_ip_only$ by All_Traffic.src_ip | `drop_dm_object_name(All_Traffic)` | iplocation src_ip
| append [| tstats `cs_summariesonly_network_traffic` count as outbound from datamodel=Network_Traffic where All_Traffic.src_ip=$tkn_filter_ip_only$ by All_Traffic.dest_ip | `drop_dm_object_name(All_Traffic)` | iplocation dest_ip]
| eval ip=coalesce(src_ip, dest_ip)
| `cs_network_generate_location_for_internal_network(ip)`
| lookup `cs_palo_search_blocked_ip_lookup_name` ip as src_ip OUTPUT blocked 
| eval inbound_mal = if(isnotnull(blocked), inbound, null()), inbound = if(isnull(blocked), inbound, null())
| eval outbound_mal = if(isnotnull(blocked), outbound, null()), outbound = if(isnull(blocked), outbound, null())
| geostats sum(inbound) as inbound_traffic, sum(outbound) as outbound_traffic, sum(inbound_mal) as inbound_malicious_traffic, sum(outbound_mal) as outbound_malicious_traffic</query>
          <earliest>$tkn_timeRange_network_traffic.earliest$</earliest>
          <latest>$tkn_timeRange_network_traffic.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="drilldown">none</option>
        <option name="mapping.type">marker</option>
        <option name="refresh.display">progressbar</option>
        <option name="mapping.fieldColors">{"inbound_traffic": #4b9179, "outbound_traffic": #0a6289, "inbound_malicious_traffic": #ff3300, "outbound_malicious_traffic": #ff9900}</option>
      </map>
    </panel>
  </row>
  <row>
    <panel>
      <title>VPN Logins $tkn_filter_authentication_label$</title>
      <input type="time" token="tkn_timeRange_vpn">
        <label></label>
        <default>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <table>
        <search>
          <query>| tstats `cs_summariesonly_authentication` values(Authentication.src) as src_ip from datamodel=Authentication where Authentication.dest="vpn_auth" AND $tkn_filter_authentication$ AND `cs_vpn_indexes` by _time Authentication.action Authentication.user span=1s | rename Authentication.* as *
        | iplocation src_ip
        | eval Country = if(isnull(Country) OR Country="", "Unknown", Country)
        | eval City = if(isnull(City) OR City="", "Unknown", City) | fields _time user action src_ip City Country
        | rename user as User, action as Status, src_ip as "SourceIP"
        | sort - _time</query>
          <earliest>$tkn_timeRange_vpn.earliest$</earliest>
          <latest>$tkn_timeRange_vpn.latest$</latest>
        </search>
        <option name="count">5</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Authentication activities $tkn_filter_authentication_label$</title>
      <input type="time" token="tkn_timeRange_authentication">
        <label></label>
        <default>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <table>
        <search>
          <query>| tstats `cs_summariesonly_authentication` count from datamodel=Authentication where `cs_authentication_indexes` $tkn_filter_authentication$ Authentication.app!=OktaIM2:log Authentication.action IN ("success","failure") Authentication.app="*" `cs_authentication_app_filter` by Authentication.app Authentication.action Authentication.user, Authentication.src</query>
          <earliest>$tkn_timeRange_authentication.earliest$</earliest>
          <latest>$tkn_timeRange_authentication.latest$</latest>
        </search>
        <option name="count">5</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
      </table>
    </panel>
  </row>
  <row depends="$tkn_show_hide_crowdstrike$">
    <panel>
      <title>Antivirus - CrowdStrike $tkn_filter_main_label$</title>
      <input type="time" token="tkn_timeRange_av_crowdstrike">
        <label></label>
        <default>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <event>
        <title>CrowdStrike Events</title>
        <search>
          <query>`cs_crowdstrike_eventstream` | eval user=coalesce('event.UserId', 'event.UserName'), ip=coalesce('event.UserIp', 'event.LocalIP'), host=coalesce('event.ComputerName', 'event.HostnameField') | search $tkn_filter_main$</query>
          <earliest>$tkn_timeRange_av_crowdstrike.earliest$</earliest>
          <latest>$tkn_timeRange_av_crowdstrike.latest$</latest>
        </search>
        <option name="count">5</option>
        <option name="list.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </event>
    </panel>
  </row>
  <row depends="$tkn_show_hide_sophos$">
    <panel>
      <title>Antivirus - Sophos $tkn_filter_main_label$</title>
      <input type="time" token="tkn_timeRange_av_sophos">
        <label></label>
        <default>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <table>
        <title>Endpoint Service Not Running</title>
        <search>
          <query>`cs_sophos` type IN ("Event::Endpoint::ServiceNotRunning", "Event::Endpoint::ServiceRestored") | rename dhost as host | eval ip=src_ip | search $tkn_filter_main$ | stats count, latest(_time) as _time, values(src_ip) as src_ip, values(suser) as user, latest(type) as type by host
| where type=="Event::Endpoint::ServiceNotRunning"
| `cs_human_readable_time_format(_time, "Service Disabled Since")`
| table host, src_ip, user, "Service Disabled Since"</query>
          <earliest>$tkn_timeRange_av_sophos.earliest$</earliest>
          <latest>$tkn_timeRange_av_sophos.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
      <table>
        <title>Real-Time Protection Disabled</title>
        <search>
          <query>`cs_sophos` type="Event::Endpoint::Sav*" | rename dhost as host | eval ip=src_ip | search $tkn_filter_main$ | stats count, latest(_time) as _time, values(src_ip) as src_ip, values(suser) as user, latest(type) as type by host
| where type=="Event::Endpoint::SavDisabled"
| `cs_human_readable_time_format(_time, "RTP Disabled Since")`
| table host, src_ip, user, "RTP Disabled Since"</query>
          <earliest>$tkn_timeRange_av_sophos.earliest$</earliest>
          <latest>$tkn_timeRange_av_sophos.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
      <table>
        <title>Endpoints in Isolation</title>
        <search>
          <query>`cs_sophos` type="Event::Endpoint::Isolation::*" | rename dhost as host | eval ip=src_ip | search $tkn_filter_main$ | stats count, latest(_time) as _time, values(src_ip) as src_ip, values(suser) as user, latest(type) by host
| where type=="Event::Endpoint::Isolation::Isolated"
| `cs_human_readable_time_format(_time, "In Isolation Since")`
| table host, src_ip, user, "In Isolation Since"</query>
          <earliest>$tkn_timeRange_av_sophos.earliest$</earliest>
          <latest>$tkn_timeRange_av_sophos.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
      <table>
        <title>Endpoints Suspended from Central Management</title>
        <search>
          <query>`cs_sophos` type="Event::Endpoint::Management::*" | rename dhost as host | eval ip=src_ip | search $tkn_filter_main$ | stats count, latest(_time) as _time, values(src_ip) as src_ip, values(suser) as user, latest(type) as type by host
| where type=="Event::Endpoint::Management::Suspended"
| `cs_human_readable_time_format(_time, "Suspended from Management Since")`
| table host, src_ip, user, "Suspended from Management Since"</query>
          <earliest>$tkn_timeRange_av_sophos.earliest$</earliest>
          <latest>$tkn_timeRange_av_sophos.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
      <table>
        <title>Other Sophos Events</title>
        <search>
          <query>`cs_sophos` NOT type IN ("Event::Endpoint::ServiceNotRunning", "Event::Endpoint::ServiceRestored", "Event::Endpoint::Sav*", "Event::Endpoint::Isolation::*", "Event::Endpoint::Management::*") | rename dhost as host | eval ip=src_ip | search $tkn_filter_main$ | table _time, host, src_ip, user, category, vendor_action, name, action, severity, signature, type</query>
          <earliest>$tkn_timeRange_av_sophos.earliest$</earliest>
          <latest>$tkn_timeRange_av_sophos.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row depends="$tkn_show_hide_defender$">
    <panel>
      <title>Antivirus - Windows Defender $tkn_filter_host_only_label$</title>
      <input type="time" token="tkn_timeRange_av_windefender">
        <label></label>
        <default>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </default>
      </input>
      <table>
        <title>Windows Defender Health Check Event</title>
        <search>
          <query>`cs_windows_defender` EventCode=1151 host=$tkn_filter_host_only$ | dedup host
| rex field=_raw "&lt;Data Name='RTP\s+state'&gt;(?&lt;RTP_state_cs&gt;[^\&lt;]*)" 
| eval RTP_state=coalesce(RTP_state_cs,RTP_state) 
| table _time, host, RTP_state, Platform_version, Engine_version, AVSignature_version, AV_signature_creation_time, BM_state, IOAV_state, OA_state, Last_full_scan_start_time, Last_full_scan_end_time, Last_quick_scan_start_time, Last_quick_scan_end_time
| eval Last_full_scan_start_time=if(Last_full_scan_start_time="1/1/1601 12:00:00 AM", "-", Last_full_scan_start_time), Last_full_scan_end_time=if(Last_full_scan_end_time="1/1/1601 12:00:00 AM", "-", Last_full_scan_end_time),  Last_quick_scan_start_time=if(Last_quick_scan_start_time="1/1/1601 12:00:00 AM", "-", Last_quick_scan_start_time), Last_quick_scan_end_time=if(Last_quick_scan_end_time="1/1/1601 12:00:00 AM", "-", Last_quick_scan_end_time)
| rename AVSignature_version as "Signature Version", AV_signature_creation_time as "AV Update Time", BM_state as "Behavior Monitoring state", IOAV_state as "IE Downloads and Outlook Express Attachments state", OA_state as "On Access state", RTP_state as "RealTime Protection State"</query>
          <earliest>$tkn_timeRange_av_windefender.earliest$</earliest>
          <latest>$tkn_timeRange_av_windefender.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
</form>
