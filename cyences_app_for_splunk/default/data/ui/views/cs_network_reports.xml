<form theme="dark" version="1.1">
  <label>Network Reports</label>
  <fieldset submitButton="false">
    <input type="time" token="timeRange">
      <label>Time Range</label>
      <default>
        <earliest>-60m@m</earliest>
        <latest>now</latest>
      </default>
    </input>
  </fieldset>
  <row>
    <panel>
      <html>
        <p>Network Reports</p>
        <p>
          <b>Data Collection:</b> All types of network traffic data are mapped with the Network_Traffic CIM data model.</p>
      </html>
      <table>
        <search>
          <query>index=* tag=network tag=communicate | head 1 | stats count | eval data=if(count&gt;0, "Data Present", "Data Not Present"), label="index=* tag=network tag=communicate" | table label, data</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="data">
          <colorPalette type="map">{"Data Present": #03991a, "Data Not Present": #a3030b}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Port Scanning Attempts</title>
      <map>
        <search>
          <query>| tstats `cs_summariesonly_network_traffic` dc(All_Traffic.dest_port) as dc_port from datamodel=Network_Traffic by All_Traffic.src_ip | `drop_dm_object_name(All_Traffic)` | search `cs_filter_private_ips`
| where dc_port&gt;=`cs_network_scanning_min_dc_ports`
| `cs_network_scanning_map_filter`
| iplocation src_ip
| geostats sum(dc_port) as count</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="drilldown">all</option>
        <option name="mapping.type">marker</option>
      </map>
      <html>
        <div>
          <p>
            <b>Description:</b> Scans over 100 ports and displays port scanning attempts on your network.</p>
        </div>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Top Network Traffic</title>
      <!--This viz is using more CPU then expected.-->
      <input type="radio" token="tkn_filter_outbound_traffic">
        <label></label>
        <choice value="| search `cs_filter_private_ips`">Filter Outbound Traffic</choice>
        <choice value="">All Traffic</choice>
        <default></default>
      </input>
      <viz type="cyences_app_for_splunk.network_telemetry_map">
        <search>
          <query>| tstats `cs_summariesonly_network_traffic` count, sum(All_Traffic.bytes) as total_bytes, sum(All_Traffic.packets) as total_packets from datamodel=Network_Traffic by All_Traffic.src_ip, All_Traffic.dest_ip | `drop_dm_object_name(All_Traffic)` 
$tkn_filter_outbound_traffic$
| lookup `cs_palo_search_blocked_ip_lookup_name` ip as src_ip OUTPUT blocked | eval blocked=if(isnull(blocked), 0, blocked)
| iplocation src_ip | rename lat as start_lat, lon as start_lon, Country as src_country, City as src_city, Region as src_region
| iplocation dest_ip | rename lat as end_lat, lon as end_lon, Country as dest_country, City as dest_city, Region as dest_region
| `cs_network_filter_internal_traffic`
| sort -blocked, -count | streamstats count as fake_count by blocked  | where fake_count&lt;=`cs_network_traffic_top` | fields - fake_count
| eventstats min(count) as min_value, max(count) as max_value by blocked | eval weight=((7-3)*(count-min_value))/(max_value-min_value)+3
| `cs_network_animate_pulse_traffic_map`
| eval color=if(blocked=1, "#dc4e41", "#53a051")
| fields src_ip, src_country, src_city, src_region, dest_ip, dest_country, dest_city, dest_region, total_bytes, total_packets, blocked, start_lat, start_lon, end_lat, end_lon, color, weight
| `cs_network_traffic_map_filter`</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="cyences_app_for_splunk.network_telemetry_map.defaultColor">#0000FF</option>
        <option name="cyences_app_for_splunk.network_telemetry_map.defaultWeight">5</option>
        <option name="cyences_app_for_splunk.network_telemetry_map.mapLatitude">35</option>
        <option name="cyences_app_for_splunk.network_telemetry_map.mapLongitude">-95</option>
        <option name="cyences_app_for_splunk.network_telemetry_map.mapZoom">5</option>
        <option name="cyences_app_for_splunk.network_telemetry_map.drilldownQuery">| tstats `cs_summariesonly_network_traffic` count, sum(All_Traffic.bytes) as total_bytes, sum(All_Traffic.packets) as total_packets from datamodel=Network_Traffic by All_Traffic.src_ip, All_Traffic.dest_ip | `drop_dm_object_name(All_Traffic)` 
$tkn_filter_outbound_traffic$
| lookup `cs_palo_search_blocked_ip_lookup_name` ip as src_ip OUTPUT blocked | eval blocked=if(isnull(blocked), 0, blocked)
| iplocation src_ip | rename lat as start_lat, lon as start_lon, Country as src_country, City as src_city, Region as src_region
| iplocation dest_ip | rename lat as end_lat, lon as end_lon, Country as dest_country, City as dest_city, Region as dest_region
| `cs_network_filter_internal_traffic`
| sort -blocked, -count | streamstats count as fake_count by blocked  | where fake_count&lt;=`cs_network_traffic_top` | fields - fake_count
| fields src_ip, src_country, src_city, src_region, dest_ip, dest_country, dest_city, dest_region, total_bytes, total_packets, blocked, start_lat, start_lon, end_lat, end_lon
| `cs_network_traffic_map_filter`</option>
        <option name="cyences_app_for_splunk.network_telemetry_map.drilldownTimeRangeToken">timeRange</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </viz>
      <html>
        <div>
          <p>
            <b>Description:</b> Displays a traffic visual for the top twenty networks with their respective source and destination pathways.</p>
        </div>
      </html>
    </panel>
  </row>
</form>
