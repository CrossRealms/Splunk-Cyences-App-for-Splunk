<form theme="dark" version="1.1">
  <label>Google Workspace</label>
  <search>
    <query>| makeresults | eval country=`cs_home_country`</query>
    <earliest>0</earliest>
    <latest>now</latest>
    <sampleRatio>1</sampleRatio>
    <done>
      <set token="tkn_country">$result.country$</set>
    </done>
  </search>
  <fieldset submitButton="false">
    <input type="time" token="timeRange">
      <label>Time Range</label>
      <default>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="text" token="tkn_user">
      <label>User</label>
      <default>*</default>
      <prefix>*</prefix>
      <suffix>*</suffix>
    </input>
  </fieldset>
  <row>
    <panel>
      <html>
        <p><b>Data Collection:</b> User can collect Google Workspace data with <a href="https://splunkbase.splunk.com/app/5556" target="_blank">Splunk Add-on for Google Workspace</a> (This app should be installed on the Search Head where Cyences is installed.)</p>
        <p>Recommendation: Do not keep any of the G Suite related App and Add-on (<a href="https://splunkbase.splunk.com/app/3791/" target="_blank">G Suite For Splunk</a>, <a href="https://splunkbase.splunk.com/app/3792/" target="_blank">TA for G Suite App</a>, <a href="https://splunkbase.splunk.com/app/3793/" target="_blank">Input Add On for G Suite App</a>) on the Search Head where Cyences or Enterprise Security installed as they have authentication tagging issues.</p>
      </html>
      <table>
        <search>
          <query>| tstats count where `cs_gws` sourcetype="gws:reports:login" 
| eval label="`cs_gws` sourcetype=gws:reports:login" 
| append [| tstats count where `cs_gws` sourcetype="gws:reports:admin" | eval label="`cs_gws` sourcetype=gws:reports:admin"] 
| append [| tstats count where `cs_gws` sourcetype="gws:reports:groups_enterprise" | eval label="`cs_gws` sourcetype=gws:reports:groups_enterprise"] 
| append [| tstats count where `cs_gws` sourcetype="gws:alerts" | eval label="`cs_gws` sourcetype=gws:alerts"] 
| eval data=if(count&gt;0, "Data Present", "Data Not Present") 
| table label, data</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="data">
          <colorPalette type="map">{"Data Present": #03991a, "Data Not Present": #a3030b}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Login Types</title>
      <chart>
        <search>
          <query>`cs_gws_login_events` | search user=$tkn_user|s$ | stats count by action | rename action as Action, count as Count | sort 0 - Count | head 10</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Login by Location</title>
      <map>
        <search>
          <query>`cs_gws_login_events` "event.name" IN("login_success", "login_failure") user=$tkn_user|s$
| iplocation ipAddress 
| geostats count(user) by action</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">all</option>
        <option name="mapping.fieldColors">{"success": #008000, "failure": #ff0000}</option>
        <option name="mapping.type">marker</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_blank">search?q=%60cs_gws_login_events%60%20%22event.name%22%20IN(%22login_success%22%2C%20%22login_failure%22)%20user%3D$tkn_user|s$%0A%7C%20iplocation%20ipAddress%20%0A%7C%20search%20lat%3E%3D$click.bounds.south$%20lat%3C$click.bounds.north$%20lon%3E%3D$click.bounds.west$%20lon%3C$click.bounds.east$%20%0A%7C%20%60cs_human_readable_time_format(_time%2C%20Time)%60%0A%7C%20rename%20action%20as%20%22Login%20Status%22%2C%20user%20as%20User%2C%20ipAddress%20as%20%22IP%20Address%22%0A%7C%20table%20Time%20%22Login%20Status%22%20User%20%22IP%20Address%22%20City%20Region%20Country&amp;earliest=$timeRange.earliest$&amp;latest=$timeRange.latest$</link>
        </drilldown>
      </map>
    </panel>
  </row>
  <row>
    <panel>
      <title>Login Challenged</title>
      <table>
        <title>User was asked for extra login question due to suspicious login activity</title>
        <search>
          <query>`cs_gws_login_events` user=$tkn_user|s$ "event.name"="login_challenge" | sort login_challenge_status | `cs_human_readable_time_format(_time, Time)` | rename user as User, ipAddress as IPAddress, action as Action, login_challenge_method as LoginChallengeMethod, login_challenge_status as LoginChallengeStatus | table Time, User, IPAddress, Action, LoginChallengeMethod, LoginType</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Login Failures</title>
      <input type="dropdown" token="tkn_drop_country" searchWhenChanged="true">
        <label>Country</label>
        <selectFirstChoice>true</selectFirstChoice>
        <fieldForLabel>label</fieldForLabel>
        <fieldForValue>value</fieldForValue>
        <search>
          <query>| makeresults count=3 
  | streamstats count 
  | eval label = case(count==2,"All",count==3,"From $tkn_country$",count==1,"Outside of $tkn_country$") 
  | eval value = case(count==2,"*",count==3,"Country=\"$tkn_country$\"",count==1,"Country!=\"$tkn_country$\"")</query>
        </search>
      </input>
      <table>
        <search>
          <query>`cs_gws_login_events` user=$tkn_user|s$ "event.name"="login_failure"
| stats latest(_time) as LastLoginTime, count, values(action) as Action, values(login_challenge_method) as LoginChallengeMethod by user, ipAddress
| iplocation ipAddress
| eval Country = if(isnotnull(org_country), org_country, Country) 
| eval Region = if(isnotnull(org_country), org_region, Region) 
| eval City = if(isnotnull(org_country), org_city, City) 
| search $tkn_drop_country$ 
| stats sum(count) as Count, values(ipAddress) as IPAddress, values(*) as *, latest(LastLoginTime) as LastLoginTime by user
| table user, IPAddress, Count, Country, Region, City, LastLoginTime, Action, LoginChallengeMethod
| `cs_human_readable_time_format(LastLoginTime)` 
| rename user as User 
| sort - Count</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Action">
          <colorPalette type="map">{"success": #03991a, "failure": #a3030b}</colorPalette>
        </format>
      </table>
      <html>
        <p><b>Description:</b> Failed logins that have occurred outside of the specified country. The country can be changed by updating the following macro (Cyences Settings &gt; Cyences App Configuration &gt; Macro Setup &gt; Network): cs_home_country.</p>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Successful Logins</title>
      <input type="dropdown" token="tkn_drop__country" searchWhenChanged="true">
        <label>Country</label>
        <selectFirstChoice>true</selectFirstChoice>
        <fieldForLabel>label</fieldForLabel>
        <fieldForValue>value</fieldForValue>
        <search>
          <query>| makeresults count=3 
  | streamstats count 
  | eval label = case(count==2,"All",count==3,"From $tkn_country$",count==1,"Outside of $tkn_country$") 
  | eval value = case(count==2,"*",count==3,"Country=\"$tkn_country$\"",count==1,"Country!=\"$tkn_country$\"")</query>
        </search>
      </input>
      <table>
        <search>
          <query>`cs_gws_login_events` user=$tkn_user|s$ "event.name"="login_success"
| stats latest(_time) as LastLoginTime, count, values(action) as Action, values(login_challenge_method) as login_challenge_method by user, ipAddress 
| iplocation ipAddress
| eval Country = if(isnotnull(org_country), org_country, Country) 
| eval Region = if(isnotnull(org_country), org_region, Region) 
| eval City = if(isnotnull(org_country), org_city, City) 
| search $tkn_drop__country$
| `cs_gws_successful_login_from_unusual_country_filter`
| stats sum(count) as Count, values(*) as *, latest(LastLoginTime) as LastLoginTime by user
| rename user as User, ipAddress as IPAddress, login_challenge_method as LoginChallengeMethod
| `cs_human_readable_time_format(LastLoginTime)` 
| table User, IPAddress, Count, Country, Region, City, LastLoginTime, Action, LoginChallengeMethod
| sort - Count</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Action">
          <colorPalette type="map">{"success": #03991a, "failure": #a3030b}</colorPalette>
        </format>
      </table>
      <html>
        <p><b>Description:</b> Successful logins that have occurred outside of the specified country. The country can be changed by updating the following macro (Cyences Settings &gt; Cyences App Configuration &gt; Macro Setup &gt; Network): cs_home_country.</p>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Password Updated</title>
      <table>
        <search>
          <query>`cs_gws_login_events` user=$tkn_user|s$ "event.name"="password_edit" | stats latest(_time) as _time, Count, values(ipAddress) as IPAddress by user | `cs_human_readable_time_format(_time, Time)` | rename user as User | sort - Count</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Other Login Related Events</title>
      <table>
        <search>
          <query>`cs_gws_login_events` user=$tkn_user|s$ NOT "event.name" IN ("login_challenge", "login_success", "login_failure", "logout", "login_verification", "password_edit") | `cs_human_readable_time_format(_time, Time)` | rename user as User, ipAddress as IPAddress, event.name as EventName | table Time, User, IPAddress, EventName</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Google Workspace - Alerts Center Details</title>
      <table>
        <search>
          <query>`cs_gws` sourcetype="gws:alerts"
| dedup alertId
| fillnull value="-" user
| search user=$tkn_user|s$
| `cs_human_readable_time_format(_time, Time)`
| rename severity as Severity, user as User, type as AlertType, event_type as EventType, description as Description, metadata.status as Status
| fillnull value="-" User, Severity, AlertType, EventType, Description, Status
| table Time, User, Severity, AlertType, EventType, Description, Status, alertId</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">row</option>
        <option name="refresh.display">progressbar</option>
        <fields>["Time","User","Severity","AlertType","EventType","Description","Status"]</fields>
        <format type="color" field="Severity">
          <colorPalette type="map">{"critical": "#ff0000", "high": "#ffa500", "medium": "#ffd301", "low": "#9acd32", "info": "#9acd32"}</colorPalette>
        </format>
        <drilldown>
          <link target="_blank">search?q=%60cs_gws%60%20sourcetype%3D%22gws%3Aalerts%22%20%0D%0A%7C%20dedup%20alertId%20%0D%0A%7C%20search%20alertId%3D%22$row.alertId$%22&amp;earliest=$timeRange.earliest$&amp;latest=$timeRange.latest$</link>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Google Workspace - Role Change/Update</title>
      <input type="multiselect" token="tkn_role_event">
        <label>Event Name</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <fieldForLabel>event.name</fieldForLabel>
        <fieldForValue>event.name</fieldForValue>
        <search>
          <query>`cs_gws` sourcetype="gws:reports:admin" "event.name" IN ("*ROLE*") user=$tkn_user|s$ | dedup event.name | table event.name</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <valuePrefix>"</valuePrefix>
        <valueSuffix>"</valueSuffix>
        <delimiter> ,</delimiter>
      </input>
      <input type="text" token="tkn_text_search_role">
        <label>Text Search</label>
        <default>*</default>
        <initialValue>*</initialValue>
        <prefix>"*</prefix>
        <suffix>*"</suffix>
      </input>
      <input type="checkbox" token="tkn_raw_events_role">
        <label></label>
        <choice value="">Show Raw Events</choice>
        <change>
          <condition match="$tkn_raw_events_role$==&quot;&quot;">
            <unset token="tkn_show_table_role"></unset>
          </condition>
          <condition>
            <set token="tkn_show_table_role"></set>
          </condition>
        </change>
      </input>
      <event depends="$tkn_raw_events_role$">
        <search>
          <query>`cs_gws` sourcetype="gws:reports:admin" "event.name" IN ("*ROLE*") user=$tkn_user|s$ "event.name" IN ($tkn_role_event$) $tkn_raw_events_role$ $tkn_text_search_role$
| dedup _time, actor.email, event.name, role_name, user
| `cs_gws_role_change_filter`
</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="list.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </event>
      <table depends="$tkn_show_table_role$">
        <search>
          <query>`cs_gws` sourcetype="gws:reports:admin" "event.name" IN ("*ROLE*") user=$tkn_user|s$ "event.name" IN ($tkn_role_event$) $tkn_show_table_role$ $tkn_text_search_role$
| dedup _time, actor.email, event.name, role_name, user
| `cs_human_readable_time_format(_time, Time)`
| `cs_gws_role_change_filter`
| rename actor.email as Admin, event.name as EventName, role_name as RoleName, user as User
| table Time, Admin, EventName, RoleName, User</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Google Workspace - Enterprise Group Change/Update</title>
      <input type="multiselect" token="tkn_group_event">
        <label>Event Name</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <fieldForLabel>event.name</fieldForLabel>
        <fieldForValue>event.name</fieldForValue>
        <search>
          <query>`cs_gws` sourcetype="gws:reports:groups_enterprise" NOT "event.name" IN ("*member*", "*user*", "*join*") | fillnull value="-" user | search user=$tkn_user|s$ | dedup event.name | table event.name</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <valuePrefix>"</valuePrefix>
        <valueSuffix>"</valueSuffix>
        <delimiter> ,</delimiter>
      </input>
      <input type="text" token="tkn_text_search_group">
        <label>Text Search</label>
        <default>*</default>
        <initialValue>*</initialValue>
        <prefix>"*</prefix>
        <suffix>*"</suffix>
      </input>
      <input type="checkbox" token="tkn_raw_events_group">
        <label></label>
        <choice value="">Show Raw Events</choice>
        <change>
          <condition match="$tkn_raw_events_group$==&quot;&quot;">
            <unset token="tkn_show_table_group"></unset>
          </condition>
          <condition>
            <set token="tkn_show_table_group"></set>
          </condition>
        </change>
      </input>
      <event depends="$tkn_raw_events_group$">
        <search>
          <query>`cs_gws` sourcetype="gws:reports:groups_enterprise" NOT "event.name" IN ("*member*", "*user*", "*join*") "event.name" IN ($tkn_group_event$) $tkn_raw_events_group$ $tkn_text_search_group$
| fillnull value="-" user
| search user=$tkn_user|s$
| rex field=_raw "\"name\": \"info_setting\", \"value\": \"(?&lt;info_setting&gt;[^\"]*)\""
| rex field=_raw "\"name\": \"old_value\", \"value\": \"(?&lt;old_value&gt;[^\"]*)\""
| rex field=_raw "\"name\": \"new_value\", \"value\": \"(?&lt;new_value&gt;[^\"]*)\""
| eval ModifiedProperties = info_setting." ::: ".old_value." --&gt; ".new_value
| `cs_gws_group_change_filter`</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="list.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </event>
      <table depends="$tkn_show_table_group$">
        <search>
          <query>`cs_gws` sourcetype="gws:reports:groups_enterprise" NOT "event.name" IN ("*member*", "*user*", "*join*") "event.name" IN ($tkn_group_event$) $tkn_show_table_group$ $tkn_text_search_group$
| fillnull value="-" user
| search user=$tkn_user|s$
| rex field=_raw "\"name\": \"info_setting\", \"value\": \"(?&lt;info_setting&gt;[^\"]*)\""
| rex field=_raw "\"name\": \"old_value\", \"value\": \"(?&lt;old_value&gt;[^\"]*)\""
| rex field=_raw "\"name\": \"new_value\", \"value\": \"(?&lt;new_value&gt;[^\"]*)\""
| eval ModifiedProperties = info_setting." ::: ".old_value." --&gt; ".new_value
| `cs_human_readable_time_format(_time, Time)`
| `cs_gws_group_change_filter`
| rename actor.email as Admin, event.name as EventName, group_id as GroupName
| table Time, Admin, EventName, GroupName, ModifiedProperties</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Google Workspace - Enterprise GroupMembership Change/Update</title>
      <input type="multiselect" token="tkn_group_membership_event">
        <label>Event Name</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <fieldForLabel>event.name</fieldForLabel>
        <fieldForValue>event.name</fieldForValue>
        <search>
          <query>`cs_gws` sourcetype="gws:reports:groups_enterprise" "event.name" IN ("*member*") | fillnull value="-" user | search user=$tkn_user|s$ | dedup event.name | table event.name</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <valuePrefix>"</valuePrefix>
        <valueSuffix>"</valueSuffix>
        <delimiter> ,</delimiter>
      </input>
      <input type="text" token="tkn_text_search_group_membership">
        <label>Text Search</label>
        <default>*</default>
        <initialValue>*</initialValue>
        <prefix>"*</prefix>
        <suffix>*"</suffix>
      </input>
      <input type="checkbox" token="tkn_raw_events_group_membership">
        <label></label>
        <choice value="">Show Raw Events</choice>
        <change>
          <condition match="$tkn_raw_events_group_membership$==&quot;&quot;">
            <unset token="tkn_show_table_group_membership"></unset>
          </condition>
          <condition>
            <set token="tkn_show_table_group_membership"></set>
          </condition>
        </change>
      </input>
      <event depends="$tkn_raw_events_group_membership$">
        <search>
          <query>`cs_gws` sourcetype="gws:reports:groups_enterprise" "event.name" IN ("*member*") "event.name" IN ($tkn_group_membership_event$) $tkn_raw_events_group_membership$ $tkn_text_search_group_membership$
| fillnull value="-" user
| search user=$tkn_user|s$
| rex field=_raw "\"name\": \"member_role\", \"multiValue\": \[(?&lt;MemberRole&gt;[^]]*)\]"
| rex mode=sed "s/\"//g" field=MemberRole
| `cs_gws_group_membership_change_filter`</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="list.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </event>
      <table depends="$tkn_show_table_group_membership$">
        <search>
          <query>`cs_gws` sourcetype="gws:reports:groups_enterprise" "event.name" IN ("*member*") "event.name" IN ($tkn_group_membership_event$) $tkn_show_table_group_membership$ $tkn_text_search_group_membership$
| fillnull value="-" user
| search user=$tkn_user|s$
| rex field=_raw "\"name\": \"member_role\", \"multiValue\": \[(?&lt;MemberRole&gt;[^]]*)\]"
| rex mode=sed "s/\"//g" field=MemberRole
| `cs_human_readable_time_format(_time, Time)`
| `cs_gws_group_membership_change_filter`
| rename actor.email as Admin, event.name as EventName, group_id as GroupName, member_id as MemberName, member_type as MemberType
| table Time, Admin, EventName, GroupName, MemberName, MemberType, MemberRole</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Google Workspace - User Change/Update</title>
      <input type="multiselect" token="tkn_user_event">
        <label>Event Name</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <fieldForLabel>event.name</fieldForLabel>
        <fieldForValue>event.name</fieldForValue>
        <search>
          <query>`cs_gws` sourcetype="gws:reports:admin" "event.name" IN ("*USER*") NOT "event.name" IN ("CHANGE_CHROME_OS_USER_SETTING", "DOWNLOAD_USERLIST_CSV") | fillnull value="-" user_email
| search user_email=$tkn_user|s$ | dedup event.name | table event.name</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <valuePrefix>"</valuePrefix>
        <valueSuffix>"</valueSuffix>
        <delimiter> ,</delimiter>
      </input>
      <input type="text" token="tkn_text_search_user">
        <label>Text Search</label>
        <default>*</default>
        <initialValue>*</initialValue>
        <prefix>"*</prefix>
        <suffix>*"</suffix>
      </input>
      <input type="checkbox" token="tkn_raw_events_user">
        <label></label>
        <choice value="">Show Raw Events</choice>
        <change>
          <condition match="$tkn_raw_events_user$==&quot;&quot;">
            <unset token="tkn_show_table_user"></unset>
          </condition>
          <condition>
            <set token="tkn_show_table_user"></set>
          </condition>
        </change>
      </input>
      <event depends="$tkn_raw_events_user$">
        <search>
          <query>`cs_gws` sourcetype="gws:reports:admin" "event.name" IN ("*USER*") NOT "event.name" IN ("CHANGE_CHROME_OS_USER_SETTING", "DOWNLOAD_USERLIST_CSV") "event.name" IN ($tkn_user_event$) $tkn_raw_events_user$ $tkn_text_search_user$
| fillnull value="-" user_email
| search user_email=$tkn_user|s$
| `cs_gws_user_change_filter`</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="list.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </event>
      <table depends="$tkn_show_table_user$">
        <search>
          <!-- For user info, used the user_email field (which has almost 100% coverage) instead of user as few event.name is not covered in TA's props -->
          <!-- try to add the old_value and new_value field if its extraction works
| rex field=_raw "\"name\": \"OLD_VALUE\", \"value\": \"\\\"(?<old_value>[^\\\"]*)\\\""
| rex field=_raw "\"name\": \"OLD_VALUE\", \"value\": \"(?<old_value_1>[^\"]*)\"" -->
          <query>`cs_gws` sourcetype="gws:reports:admin" "event.name" IN ("*USER*") NOT "event.name" IN ("CHANGE_CHROME_OS_USER_SETTING", "DOWNLOAD_USERLIST_CSV") "event.name" IN ($tkn_user_event$) $tkn_show_table_user$ $tkn_text_search_user$
| fillnull value="-" user_email
| search user_email=$tkn_user|s$
| `cs_human_readable_time_format(_time, Time)`
| `cs_gws_user_change_filter`
| rename actor.email as Admin, event.name as EventName, user_email as User
| table Time, Admin, EventName, User</query>
          <earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Google Drive objects shared Outside or with External User</title>
      <table>
        <search>
          <query>`cs_gws` sourcetype="gws:reports:drive" "event.type"=acl_change visibility IN ("shared_externally","people_with_link")
| rex field=actor.email "[^@]+@(?&lt;src_domain&gt;[^@]+)" 
| rex field=target_user "[^@]+@(?&lt;dest_domain&gt;[^@]+)" 
| where isnotnull(src_domain) AND isnotnull(dest_domain)
| search src_domain IN `cs_email_user_domain` AND NOT dest_domain IN `cs_email_user_domain`
| rename actor.email as actor
| stats values(doc_title) as doc_title, values(doc_type) as doc_type, values(event.name) as event.name, values(email) as dst_email_list, values(is_privileged_user) as is_privileged_user, values(visibility) as visibility, count, min(_time) as firstTime, max(_time) as lastTime by actor
| `cs_user_privilege_mapping(actor)` 
| `cs_human_readable_time_format(firstTime)` 
| `cs_human_readable_time_format(lastTime)`
| `cs_gws_google_drive_objects_shared_externally_filter`</query>
<earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="drilldown">none</option>
        <option name="maxLines">10</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Google Drive objects accessed by External User</title>
      <table>
        <search>
          <query>`cs_gws` sourcetype="gws:reports:drive"
| rex field=owner "[^@]+@(?&lt;src_domain&gt;[^@]+)" 
| rex field=email "[^@]+@(?&lt;dest_domain&gt;[^@]+)" 
| where isnotnull(src_domain) AND isnotnull(dest_domain)
| search src_domain IN `cs_email_user_domain` AND NOT dest_domain IN `cs_email_user_domain`
| `cs_user_privilege_mapping(owner)` 
| stats values(doc_title) as doc_title, values(doc_type) as doc_type, values(event.name) as event.name, values(owner) as src_email_list, values(is_privileged_user) as is_privileged_user, values(visibility) as visibility, count, min(_time) as firstTime, max(_time) as lastTime by email
| `cs_human_readable_time_format(firstTime)` 
| `cs_human_readable_time_format(lastTime)`
| `cs_gws_google_drive_objects_accessed_by_external_user`</query>
<earliest>$timeRange.earliest$</earliest>
          <latest>$timeRange.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="drilldown">none</option>
        <option name="maxLines">10</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
</form>