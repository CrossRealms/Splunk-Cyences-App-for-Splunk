[cyences:notable:events]
TRUNCATE = 0
REPORT-1 = cyences_alert_extract
KV_MODE  = none
DATETIME_CONFIG = CURRENT

EVAL-orig_dest = dest
EVAL-orig_dvc = dvc
EVAL-orig_src = src
EVAL-orig_src_user = src_user
EVAL-orig_user = user

EVAL-dest = if(isnotnull(category), null(), dest)
EVAL-dvc = if(isnotnull(category), null(), dvc)
EVAL-src = if(isnotnull(category), null(), src)
EVAL-src_user = if(isnotnull(category), null(), src_user)
EVAL-user = if(isnotnull(category), null(), user)

EVAL-timestamp = if(timestamp=="none",null(), timestamp)
EVAL-category = rtrim(mvindex(split(search_name, "-"),0))
FIELDALIAS-alert_name = search_name as alert_name   

EVAL-cyences_severity = if(isnotnull(cyences_severity), cyences_severity, "medium")

# To disable ES related auto field extraction based on the src, dest fields
LOOKUP-zu-asset_lookup_by_str-dest = cs_fake_lookup_avoid_es_fields.csv dest OUTPUT avoid_es_fields
LOOKUP-zu-asset_lookup_by_str-dvc = cs_fake_lookup_avoid_es_fields.csv dvc OUTPUT avoid_es_fields
LOOKUP-zu-asset_lookup_by_str-src = cs_fake_lookup_avoid_es_fields.csv src OUTPUT avoid_es_fields
LOOKUP-zv-asset_lookup_by_cidr-dest = cs_fake_lookup_avoid_es_fields.csv dest OUTPUT avoid_es_fields
LOOKUP-zv-asset_lookup_by_cidr-dvc = cs_fake_lookup_avoid_es_fields.csv dvc OUTPUT avoid_es_fields
LOOKUP-zv-asset_lookup_by_cidr-src = cs_fake_lookup_avoid_es_fields.csv src OUTPUT avoid_es_fields
LOOKUP-zy-identity_lookup_expanded-src_user = cs_fake_lookup_avoid_es_fields.csv src_user OUTPUT avoid_es_fields
LOOKUP-zy-identity_lookup_expanded-user = cs_fake_lookup_avoid_es_fields.csv user OUTPUT avoid_es_fields
LOOKUP-zz-asset_lookup_default_fields-dest = cs_fake_lookup_avoid_es_fields.csv dest OUTPUT avoid_es_fields
LOOKUP-zz-asset_lookup_default_fields-dvc = cs_fake_lookup_avoid_es_fields.csv dvc OUTPUT avoid_es_fields
LOOKUP-zz-asset_lookup_default_fields-src = cs_fake_lookup_avoid_es_fields.csv src OUTPUT avoid_es_fields
LOOKUP-zz-identity_lookup_default_fields-src_user = cs_fake_lookup_avoid_es_fields.csv src_user OUTPUT avoid_es_fields
LOOKUP-zz-identity_lookup_default_fields-user = cs_fake_lookup_avoid_es_fields.csv user OUTPUT avoid_es_fields


####################
## Cyences Logger ##
####################
[source::.../var/log/splunk/cyences_*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)\d{4}-\d{2}-\d{2}\s
sourcetype = cyences:logs
TRUNCATE = 100000
TIME_PREFIX = ^
TIME_FORMAT = %Y-%m-%d %H:%M:%S %z


######################
## Windows Defender ##
######################
[source::XmlWinEventLog:Microsoft-Windows-Windows Defender/Operational]
# Support for Windows 10 event logs for defender
EVAL-AVSignature_version = coalesce(AVSignature_version, AV_security_intelligence_version)
EVAL-AV_signature_creation_time = coalesce(AV_signature_creation_time, AV_security_intelligence_creation_time)

[source::WinEventLog:Microsoft-Windows-Windows Defender/Operational]
# Support for Windows 10 event logs for defender
EVAL-AVSignature_version = coalesce(AVSignature_version, AV_security_intelligence_version)
EVAL-AV_signature_creation_time = coalesce(AV_signature_creation_time, AV_security_intelligence_creation_time)

######################
## Kaspersky ##
######################
[(?::){0}kaspersky*]
EXTRACT-dhost = ^.+dhost\=(?P<dest>[\w\-]+)
REPORT-kaspersky_fieldextract = kaspersky_fieldextract
EXTRACT-msgfield = msg=(?<msg>.*)rt=\d+

# Field extraction for the LEEF formatted logs
REPORT-kaspersky_fieldextract_leef = kaspersky_fieldextract_leef

EVAL-url = if(isnotnull(signature),"https://threats.kaspersky.com/en/threat/"+signature,if(isnotnull(EVC_EV_ATTACK_NAME),"https://threats.kaspersky.com/en/threat/"+EVC_EV_ATTACK_NAME,NULL))
EXTRACT-kaspersky_action = Result description:\s*(?<action>\w+)
EXTRACT-kaspersky_object_signature = Name:\s*(?<signature>[\w:.+-]+)
EVAL-msg = coalesce(msg, EVC_EV_DESC)
EVAL-ProductName = coalesce(ProductName,EVC_EV_KL_PRODUCT_NAME)
EVAL-ProductVersion = coalesce(ProductVersion, EVC_EV_KL_PRODUCT_VER)
EVAL-TaskName = coalesce(TaskName, EVC_EV_TASK_NAME)
EVAL-VirusName = coalesce(VirusName, EVC_EV_VIRUS_NAME)

######################
#### O365 ############
######################
[o365:management:activity]
EVAL-action = case(isnotnull(action),action,(Operation == "UserLoginFailed"),"failure",(Operation == "UserLoggedIn"),"success")

[source::AuditLogs.SignIns]
FIELDALIAS-country = location.countryOrRegion AS org_country_code
FIELDALIAS-region = location.state AS org_region
FIELDALIAS-city = location.city AS org_city
FIELDALIAS-lat = location.geoCoordinates.latitude AS org_lat
FIELDALIAS-lon = location.geoCoordinates.longitude AS org_lon
FIELDALIAS-user = userPrincipalName AS user
FIELDALIAS-src = ipAddress AS src

EVAL-action = case(isnotnull(action),action, 'status.errorCode' != 0,"failure", 'status.errorCode' == 0,"success")
EVAL-app = "AzureActiveDirectory"

LOOKUP-cs_o365_error_codes = cs_o365_error_codes ErrorCode AS status.errorCode OUTPUT LogonError
LOOKUP-cs_country_code = cs_country_code code AS location.countryOrRegion OUTPUT country AS org_country

######################
#### Azure AD ########
######################
[azure:aad:audit]
EVAL-Actor = coalesce('initiatedBy.user.userPrincipalName','initiatedBy.app.displayName')
FIELDALIAS-Command = activityDisplayName AS Command
FIELDALIAS-Target_DisplayName = targetResources{}.displayName AS Target_DisplayName
FIELDALIAS-ResultStatus = result AS ResultStatus
FIELDALIAS-displayName = targetResources{}.modifiedProperties{}.displayName AS displayName
FIELDALIAS-newValue = targetResources{}.modifiedProperties{}.newValue AS newValue
FIELDALIAS-oldValue = targetResources{}.modifiedProperties{}.oldValue AS oldValue
FIELDALIAS-key = additionalDetails{}.key AS key
FIELDALIAS-value = additionalDetails{}.value AS value
FIELDALIAS-Target_ObjectID = targetResources{}.id AS Target_ObjectID
FIELDALIAS-Target_userPrincipalName = targetResources{}.userPrincipalName AS Target_userPrincipalName


######################
### Global Protect ###
######################
# For new Palo Alto version's (Jan/Feb 2021) Global Protect data
[pan:globalprotect]
EVAL-src = coalesce(src, src_ip)
EVAL-action = coalesce(action, status)
EVAL-dest_category = if((log_subtype="login" AND (event_id="portal-auth" OR event_id="gateway-auth") AND (action="failure" OR status="failure")) OR (log_subtype="connected" AND event_id="gateway-connected" AND (action="success" OR status="success")), "vpn_auth", dest_category)

# Palo Firewall detail
EVAL-dest = coalesce(gateway, host)

# Logic for login success on Palo Alto App (New Version of Global Protect)
# Success - log_subtype="connected"
# Failure - result="failure"

# Logic Here (New Version of Global Protect)
# Success - (event_id="gateway-connected") action="success"
# Failure - (event_id="portal-auth" OR event_id="gateway-auth") action="failure"


# NEW # sourcetype="pan:globalprotect"
# =====================================
# log_subtype and event_id
# ------
# login	        gateway-auth
# configuration	gateway-config-release
# connected	    gateway-connected
# login	        gateway-gen-cookie
# configuration	gateway-getconfig
# host-info	    gateway-hip-check
# host-info	    gateway-hip-report
# logout	    gateway-logout
# before-login	gateway-prelogin
# login       	gateway-register
# tunnel	    gateway-setup-ipsec
# tunnel      	gateway-tunnel-latency
# login	        portal-auth
# login       	portal-gen-cookie
# configuration	portal-getconfig
# before-login	portal-prelogin


# Backward compatibility (Legacy Palo Alto (Global Protect) Version)
[pan:system]
EVAL-dest_category = case(log_subtype="globalprotect" AND (event_id="globalprotectportal-auth-fail" OR event_id="globalprotectgateway-auth-fail" OR event_id="globalprotectgateway-regist-succ"), "vpn_auth", log_subtype="auth" AND object="RSA_Radius", "radius_auth", true(), dest_category)

# Logic for login success on Palo Alto App (Legacy Version of Global Protect)
# Success - 
#         On Login by User panel - event_id="globalprotectgateway-auth-succ"
#         On Login/Logout Events panel - event_id="globalprotectgateway-regist-succ"
# Failure - event_id="globalprotectportal-auth-fail"

# Logic Here (Legacy Version of Global Protect)
# Success - event_id="globalprotectgateway-regist-succ"
# Failure - (event_id="globalprotectportal-auth-fail" OR event_id="globalprotectgateway-auth-fail")


# OLD # sourcetype="pan:system" log_subtype="globalprotect"
# ===========================================================
# event_id
# ----------
# globalprotectgateway-auth-fail
# globalprotectgateway-auth-succ
# globalprotectgateway-config-release
# globalprotectgateway-config-succ
# globalprotectgateway-gencookie-succ
# globalprotectgateway-logout-succ
# globalprotectgateway-regist-fail
# globalprotectgateway-regist-succ
# globalprotectgateway-switch-succ
# globalprotectportal-auth-fail
# globalprotectportal-auth-succ
# globalprotectportal-config-succ
# globalprotectportal-gencookie-succ


# For Radius Authentication on Palo Alto
# Extracted dest_category=radius_auth for radius authentication logs at above config
EVAL-action = if(log_subtype="auth" AND object="RSA_Radius", case(event_id="auth-success", "success", event_id="auth-failure", "failure", event_id="auth-fail", "failure", 1==1, action), action)

EXTRACT-user_for_radius = \sauthenticating user \'(?<user>[^\']+)\'
EXTRACT-src_for_radius = \sfrom \'(?<src>[^\']+)\',
EXTRACT-src_ip_for_radius = \sfrom \'(?<src_ip>[^\']+)\',



#####################
### Fortigate VPN ###
#####################
# vendor_action - logdesc
# tunnel-up - SSL VPN tunnel up
# phase2-up - 
# negotiate - SSL VPN login success
# ssl-login-fail - SSL VPN login fail
# tunnel-down - SSL VPN tunnel down
# ssl-web-close - SSL VPN close

[fgt_event]
# fgt_event for old Fortigate Add-on (1.6.2)
EVAL-dest_category = if(subtype="vpn" AND ((vendor_action="tunnel-up" AND reason="login successfully") OR vendor_action="ssl-login-fail"), "vpn_auth", dest_category)


[fortigate_event]
# fortigate_event for the new Fortigate Add-on (1.6.5)
EVAL-dest_category = if(subtype="vpn" AND ((vendor_action="tunnel-up" AND reason="login successfully") OR vendor_action="ssl-login-fail"), "vpn_auth", dest_category)
# Note - eval action is not working because Fortigate Add-on's lookup is overriding the action field, hence we need to make changes in the data-model & dashboard queries
# action field update in the Authentication data-model -> case(sourcetype="fgt_event" AND subtype="vpn" AND vendor_action IN ("tunnel-up", "phase2-up"), "success", sourcetype="fgt_event" AND subtype="vpn" AND vendor_action="ssl-login-fail", "failure", isnull(action) OR action="", "unknown", 1==1, action)



#################
### Cisco VPN ###
#################
[cisco:ise:syslog]
EXTRACT-provisioning = Client\sProvisioning:\s+Client\sprovisioning\s(?<provisioning_action>\w+)
EVAL-dest_category = if(MESSAGE_CODE IN (5400, 5401) AND isnull(AD_User_Candidate_Identities), "vpn_auth", dest_category)
EVAL-action = case(match(provisioning_action,"(?i)succeeded"),"created", MESSAGE_CODE IN("60461","51003","91003","58004"),"stopped", MESSAGE_CODE IN("52002","60132","60198","60216","60106"),"deleted", MESSAGE_CODE IN("60085","60086","51100","52001","60208","58016","51101"),"modified", MESSAGE_CODE IN("58022","58024","58023","60131","52000","60237","60094"),"created", MESSAGE_CODE IN("5400", "12516", "12514", "12508", "5411", "5405", "87501", "60188", "60081", "60082", "60185", "11504","11213","12552","12561", "5441", "5413", "5436", "5440"),"failure",MESSAGE_CODE IN("5200", "5231", "61076", "60116", "60206", "60115", "60205", "60184", "60075", "12304", "12305", "11520", "11810","60190","51002","11808","11806","11522","12313","12310","12816","12804","12813","12812","12811","12810","12807","12806","12805","12800","12302","12300","12301","12500","11507","60080","60197","5233","5232","60214","12801","12802","60204","11521"),"success", MESSAGE_CODE IN ("61025"),"allowed", MESSAGE_CODE IN ("58003","90051","90200"),"started", MESSAGE_CODE IN ("60153"),"read",true(),action)

[cisco:estreamer:data]
FIELDALIAS-1vendor_user = user AS vendor_user
EVAL-user = username
EVAL-dest_category = if(rec_type_desc="New VPN Device Login", "vpn_auth", dest_category)
EVAL-action = case(rec_type_desc="New VPN Device Login", "success", fw_rule_action="Allow","allowed", like(fw_rule_action,"%Block%"), "blocked", 1=1, action)
EVAL-src_ip = if(rec_type_desc="New VPN Device Login" OR rec_type_desc="New VPN Device Logoff", client_ip, src_ip)
EVAL-src = if(rec_type_desc="New VPN Device Login" OR rec_type_desc="New VPN Device Logoff", client_ip, src)
EVAL-private_ip = if(rec_type_desc="New VPN Device Login" OR rec_type_desc="New VPN Device Logoff", src_host, private_ip)



# Sophos Endpoint Protection

[sophos_events]
EXTRACT-user = \"source\":\s*\"(?<user>[^\"]+)\"

[sophos_endpoints]
FIELDALIAS-user = "associatedPerson.name" AS user
EVAL-vendor_product = "Sophos Endpoint Protection"

[sophos:xg:firewall]
EVAL-action = case(log_subtype="Allowed", "allowed", log_subtype="Denied", "blocked")
EVAL-app = app_name
EVAL-src = src_ip
EVAL-dest = dest_ip
EVAL-packets = packets_out+packets_in


# WinEventLog Security Logs - XML format
[source::XmlWinEventLog:Security]
# wineventlog cleared
EXTRACT-user = <SubjectUserName>(?<user>[^<]+)</SubjectUserName>
EVAL-LogName = if((EventCode=1100 OR EventCode=1102), "Audit-Security", LogName)
EVAL-user = coalesce(User, user, "-")

# To keep the fieldname same as wineventlog sourcetype
FIELDALIAS-ComputerName = Computer AS ComputerName
FIELDALIAS-Subject_Account_Name = SubjectUserName AS Subject_Account_Name
FIELDALIAS-Subject_Account_Domain = SubjectDomainName AS Subject_Account_Domain
FIELDALIAS-Target_Account_Name = TargetUserName AS Target_Account_Name
FIELDALIAS-Target_Account_Domain = TargetDomainName AS Target_Account_Domain

EVAL-Account_Name=coalesce(Account_Name, Target_Account_Name)
EVAL-Account_Domain=coalesce(Account_Domain, Target_Account_Domain)

# Configuration for AD Object Changes
REPORT-obj_type_from_xml = cs_object_class_as_obj_type
REPORT-obj_dn_from_xml = ObjectDN_as_DN
REPORT-obj_guid_from_xml = ObjectGUID_as_objectGUID
REPORT-obj_old_dn_from_xml = OldObjectDN_as_Old_DN
REPORT-obj_new_dn_from_xml = NewObjectDN_as_New_DN
REPORT-obj_corr_id_from_xml = OpCorrelationID_as_Correlation_ID
EVAL-msad_action = if(msad_action=="changed","modified",msad_action)
REPORT-ldap_display_name_from_xml = AttributeLDAPDisplayName_as_LDAP_Display_Name
EXTRACT-cs_obj_dir_src_user_nm = (?si)(?:SubjectUserName\'\>(?!\-)(?<src_user>[^\<]+))
EXTRACT-cs_obj_xml_src_domain = (?si)(?:SubjectDomainName\'\>(?!\-)(?<src_nt_domain>[^\<]+))
EXTRACT-cs_obj_xml_user_nm = (?si)(?:TargetUserName\'\>(?!\-)(?<user>[^\<]+))
EXTRACT-cs_obj_xml_dest_domain = (?si)(?:TargetDomainName\'\>(?!\-)(?<dest_nt_domain>[^\<]+))
EXTRACT-cs_obj_xml_dest_domain_ds = (?si)(?:DSName\'\>(?!\-)(?<dest_nt_domain>[^\.]+)\..*\<)
EXTRACT-cs_obj_xml_user_obj_guid = (?si)(?:(ObjectGUID)\'\>\{(?<user_obj_guid>[^\}]+))\}.*?\'ObjectClass\'\>user\<
EXTRACT-cs_obj_xml_user_obj_dn = (?si)(?:(ObjectDN|NewObjectDN)\'\>(?<user_obj_dn>[^\<]+))\<.*?\'ObjectClass\'\>user\<
EXTRACT-cs_obj_xml_comp_obj_guid = (?si)(?si)(?:(ObjectGUID)\'\>\{(?<computer_obj_guid>[^\}]+))\}.*?\'ObjectClass\'\>computer\<
EXTRACT-cs_obj_xml_comp_obj_dn = (?si)(?:(ObjectDN|NewObjectDN)\'\>(?<computer_obj_dn>[^\<]+))\<.*?\'ObjectClass\'\>computer\<
EXTRACT-cs_obj_xml_group_obj_guid = (?si)(?:(ObjectGUID)\'\>\{(?<group_obj_guid>[^\}]+))\}.*?\'ObjectClass\'\>group\<
EXTRACT-cs_obj_xml_group_obj_dn = (?si)(?:(ObjectDN|NewObjectDN)\'\>(?<group_obj_dn>[^\<]+))\<.*?\'ObjectClass\'\>group\<
EXTRACT-cs_obj_xml_member_obj_dn = (?si)(?:\'ObjectClass\'\>group\<\/Data\>\<Data Name\=\'AttributeLDAPDisplayName\'\>member\<).*(?:\'AttributeValue\'\>)(?<member_obj_dn>[^\<]+)
EXTRACT-cs_obj_xml_ou_obj_guid = (?si)(?:(ObjectGUID)\'\>\{(?<ou_obj_guid>[^\}]+))\}.*?\'ObjectClass\'\>organizationalUnit\<
EXTRACT-cs_obj_xml_ou_obj_dn = (?si)(?:(ObjectDN|NewObjectDN)\'\>(?<ou_obj_dn>[^\<]+))\<.*?\'ObjectClass\'\>organizationalUnit\<
EXTRACT-cs_obj_xml_chg_gp_guid = (?si)(?:AttributeLDAPDisplayName\'\>gPLink).*?cn\=\{(?<chg_gp_guid>[^\}]+)
EXTRACT-cs_obj_xml_gpo_obj_guid = (?si)(?:(ObjectGUID)\'\>\{(?<gpo_obj_guid>[^\}]+))\}.*?\'ObjectClass\'\>groupPolicyContainer\<
EXTRACT-cs_obj_xml_gpo_obj_cn = (?si)(?:(ObjectDN)\'\>CN\=\{(?<Object_Name_Guid>[^\}]+))\}.*?\'ObjectClass\'\>groupPolicyContainer\<
EXTRACT-cs_obj_xml_sourcename = (?msi)\<Provider\sName\=\'(?<SourceName>[^\']+)
EXTRACT-cs_obj_xml_logname_from_channel=(?msi)(?:\<Channel\>)(?<LogName>[^\<]+)
EXTRACT-cs_obj_xml_install_product = (?msi)(?:\>(1033|1042|1040)\<\/EventID\>).*(?:\<EventData\>)\<Data\>(|(?<product_name>[^\<]+))\<\/Data\>\<Data\>(|(?<product_version>[^\<]+))\<\/Data\>\<Data\>(|(?<product_language>[^\<]+))\<\/Data\>\<Data\>(|(?<product_client_id>[^\<]+))\<\/Data\>\<Data\>(|(?<product_manufacturer>[^\<]+))\<\/Data\>\<Data\>
EXTRACT-cs_obj_xml_product_name=(?msi)(?:(\<Application\>|Product|Produkt)(\:|\sName\:))(?<product_name>[^(\<|\.|\-)]+)
EXTRACT-cs_obj_xml_1022_product_info=(?:\>(1022)\<\/EventID\>).*(?:\<EventData\>\<Data\>)(|(?<product_name>[^\<]+))\<\/Data\>\<Data\>(|(?<product_update>[^\<]+))\<\/Data\>
EXTRACT-cs_obj_xml_1035_6_product_info=| rex "(?:\>(1034|1035)\<\/EventID\>).*(?:\<EventData\>\<Data\>)(|(?<product_name>[^\<]+))\<\/Data\>\<Data\>(|(?<product_version>[^\<]+))\<\/Data\>\<Data\>(|(?<product_language>[^\<]+))\<\/Data\>\<Data\>(|(?<product_status>[^\<]+))\<\/Data\>\<Data\>(|(?<product_manufacturer>[^\<]+))
EXTRACT-cs_obj_xml_1005_6_product_name=(?msi)(?:EventCode\=(1005|1006)).*(?:Message\=)(?<product_name>[^\s\-]+)\s\-(?<install_msg>[^$]+)
EXTRACT-cs_obj_xml_1036_product_info=(?:\>1036\<\/EventID\>).*(?:\<EventData\>\<Data\>)(|(?<product_name>[^\<]+))\<\/Data\>\<Data\>(|(?<product_version>[^\<]+))\<\/Data\>\<Data\>(|(?<product_language>[^\<]+))\<\/Data\>\<Data\>(|(?<product_update>[^\<]+))\<\/Data\>\<Data\>(|(?<product_status>[^\<]+))\<\/Data\>\<Data\>(|(?<product_manufacturer>[^\<]+))
EXTRACT-cs_obj_xml_nApps=(?:\<nApplications\>)(?<n_apps>[^\<]+)
LOOKUP-cs_obj_changes = cs_ad_audit_change_event_codes EventCode AS EventCode OUTPUTNEW change_action AS msad_action change_category AS change_category obj_type AS obj_type signature AS change_signature
LOOKUP-cs_obj_changes_adv = cs_ad_audit_change_event_codes EventCode AS EventCode obj_type AS obj_type OUTPUTNEW change_action AS msad_action change_category AS change_category obj_type AS obj_type signature AS change_signature
EVAL-user_type = case(match(user,"\$(\,|\@|$)"),"computer",match(user,"SYSTEM|NoGuestsAllowed|ANONYMOUS|NT AUTHORITY|DWM-|LOCAL SERVICE|NETWORK SERVICE"),"system",isnotnull(user),"user")
EVAL-src_user_type = case(match(src_user,"\$(\,|\@|$)"),"computer",match(src_user,"SYSTEM|NoGuestsAllowed|ANONYMOUS|NT AUTHORITY|DWM-|LOCAL SERVICE|NETWORK SERVICE"),"system",isnotnull(src_user),"user")
EVAL-user_obj_email = if(isnull(user_obj_email),if(match(user,"(?=.{1,64}@\S)"),lower(user),if(isnull(User_Principal_Name),NULL,lower(User_Principal_Name))),lower(user_obj_email))
EVAL-dir_svcs_action = if(OperationType="%%14674","Value Added",if(OperationType="%%14675","Value Deleted","Unknown"))
EVAL-member_obj_class = replace(member_obj_class,"^.*\|","")
EVAL-group_obj_ldap_v = if(ObjectClass=="group",LDAP_Display_Name."|".Value,NULL)
EVAL-user_obj_ldap_v = if(ObjectClass=="user",LDAP_Display_Name."|".Value,NULL)
EVAL-gpo_obj_ldap_v = if(ObjectClass=="groupPolicyContainer",LDAP_Display_Name."|".Value,NULL)
EVAL-ou_obj_ldap_v = if(ObjectClass=="organizationalUnit",LDAP_Display_Name."|".Value,NULL)
EVAL-comp_obj_ldap_v = if(ObjectClass=="computer",LDAP_Display_Name."|".Value,NULL)
EVAL-Old_DN = lower(replace(Old_DN,"\x5C{1}",""))
EVAL-New_DN = lower(replace(New_DN,"\x5C{1}",""))
EVAL-DN = lower(replace(DN,"\x5C{1}",""))
EVAL-user_obj_dn = lower(replace(user_obj_dn,"\x5C{1}",""))
EVAL-group_dn = if(ObjectClass="group",lower(replace(ObjectDN,"\x5C{1}","")),lower(replace(group_dn,"\x5C{1}","")))
EVAL-user_group = lower(replace(user_group,"\x5C{1}",""))
EVAL-Group_Name = lower(replace(Group_Name,"\x5C{1}",""))
EVAL-group_obj_dn = lower(replace(group_obj_dn,"\x5C{1}",""))
EVAL-group_obj_id = lower(replace(group_obj_id,"\x5C{1}",""))
EVAL-group_obj_lkp=if(isnull(user_group),if(isnull(Group_Name),if(isnull(group_obj_dn),if(isnull(group_obj_id),if(isnull(group_dn),NULL,lower(replace(group_dn,"\x5C{1}",""))),lower(replace(group_obj_id,"\x5C{1}",""))),lower(replace(group_obj_dn,"\x5C{1}",""))),lower(replace(Group_Name,"\x5C{1}",""))),lower(replace(user_group,"\x5C{1}","")))
EVAL-comp_obj_dn = lower(replace(comp_obj_dn,"\x5C{1}",""))
EVAL-comp_obj_sam = lower(replace(comp_obj_dn,"\x5C{1}",""))
EVAL-ou_obj_dn = lower(replace(ou_obj_dn,"\x5C{1}",""))
EVAL-cn = if(isnull(cn),name,if(match("\x5C{1}",cn),replace(cn,"\x5C{1}",""),cn))
EVAL-distinguishedName = lower(replace(distinguishedName,"\x5C{1}",""))
EVAL-member_obj_dn = lower(replace(member_obj_dn,"\x5C{1}",""))
EVAL-member_obj_sam = if(isnull(member_obj_sam),if(isnull(member_obj_secid),lower(replace(member_obj_dn,"\x5C{1}","")),lower(member_obj_secid)),lower(replace(member_obj_sam,"\x5C{1}","")))
EVAL-member_obj_cn = lower(replace(member_obj_cn,"\x5C{1}",""))
EVAL-member_obj_id = case(isnull(member_obj_sam) AND isnotnull(member_obj_cn),lower(replace(member_obj_cn,"\x5C{1}","")),match(member_obj_sam,"(?i)^CN\="),lower(replace(member_obj_cn,"\x5C{1}","")),isnotnull(member_obj_sam) AND NOT match(member_obj_sam,"(?i)^CN\="),lower(replace(member_obj_sam,"\x5C{1}","")),isnull(member_obj_sam) AND isnull(member_obj_cn),lower(replace(member_obj_dn,"\x5C{1}","")))
EVAL-member_obj_lkp = if(isnull(member_obj_dn),if(isnull(member_obj_cn),if(isnull(member_obj_id),if(isnull(member_obj_sam),NULL,lower(replace(member_obj_sam,"\x5C{1}",""))),lower(replace(member_obj_id,"\x5C{1}",""))),lower(replace(member_obj_cn,"\x5C{1}",""))),lower(replace(member_obj_dn,"\x5C{1}","")))
EVAL-obj_type = lower(obj_type)


# WinEventLog Security Logs - Plain text format
[source::WinEventLog:Security]
# wineventlog cleared
EVAL-LogName = if((EventCode=1100 OR EventCode=1102), "Audit-Security", LogName)
EVAL-user = coalesce(User, user, "-")
EVAL-LogonType = case(Logon_Type=2, "Interactive",Logon_Type=3, "Network",Logon_Type=4, "Batch",Logon_Type=5, "Service",Logon_Type=7, "Unlock",Logon_Type=8, "NetworkCleartext",Logon_Type=9, "NewCredentials",Logon_Type=10, "RemoteInteractive",Logon_Type=11, "CachedInteractive")

# Windows firewall disabled events
EVAL-SettingType = if(EventCode=4950 AND isnull(SettingType), mvfilter(Type!="Information"), SettingType)
EVAL-SettingValue = if(EventCode=4950 AND isnull(SettingValue), Value, SettingValue)
EVAL-ProfileChanged = if(EventCode=4950 AND isnull(ProfileChanged), Changed_Profile, ProfileChanged)

# Configuration for AD Object Changes
EXTRACT-cs_obj_src_user = (?msi)(?:Account\s+Name\:(?!\s+(\r|\n))(?!\s+(\-|\r|\n))(?!\s+(\S+\$|\r|\n))(?<src_user>[^(\r|\n)]+))
EXTRACT-cs_obj_user = (?msi)(?:Account\s+Name\:.*?(Account\s+Name\:)|(?:Account\s+Name\:))(?!\s+(\-|\r\n))(?!\s+(\S+\$|\r|\n))\s+(?<user>[^(\r|\n)]+)
EXTRACT-cs_obj_comp_obj_sam = (?msi)(?:Account\s+Name\:.*?(Account\s+Name\:)|(?:Account\s+Name\:))(?!\s+(\-|\r\n))\s+(?<comp_obj_sam>[^(\r|\n)]+)(?<=\$)
EXTRACT-cs_obj_member_Account_Name_secid = (?msi)(?:Member\:)(.*?(Account\sName\:|Security ID:)(\s+(?<member_obj_domain>[^\x5C{1}]+)\x5C{1}|\s+)(?<member_obj_sam>[\S\-\S][^(\r|\n)]+)(\r|\n))
EXTRACT-cs_obj_member_obj_dn = (?msi)(?:Member\:).*?(Account\s+Name\:\s+(?<member_obj_dn>CN\=[^(\r|\n)]+))
EXTRACT-cs_obj_member_obj_cn_val = (?msi)(?:LDAP Display Name\:\s+member)(.*?Value\:)\s+CN=(?<member_obj_cn>.+?)(?<!\\),(?:(?:OU|CN|DC).+?(?<!\\),)+(DC.+?)(\s+|\n|\r)
EXTRACT-cs_obj_group_secid = (?msi)(?:New\sGroup\:|Group\:)(\s|\r|\n)(.*?Security ID:(\s+(?<group_obj_domain>[^\x5C{1}]+)\x5C{1}|\s+)(?<group_obj_id>[\S\-\S][^(\r|\n)]+)(\r|\n))
EXTRACT-cs_obj_group_nm_domain = (?msi)Group\:(\s|\r|\n)(.*?Group\sName\:\s+(?<group_obj_nm>[\S\-\S][^(\r|\n)]+)(\r|\n))(.*?Group\sDomain\:\s+(?<group_obj_domain>[\S\-\S][^(\r|\n)]+)(\r|\n))
EXTRACT-cs_obj_group_name_secid = (?msi)(?:New\sGroup\:|Group\:)(\s|\r|\n)(.*?Security ID:(\s+(?<group_obj_domain>[^\x5C{1}]+)\x5C{1}|\s+)(?<group_obj_id>[\S\-\S][^(\r|\n)]+)(\r|\n))
EXTRACT-cs_obj_src_nt_domain_Account_Domain = (?msi)(?:Account\s+Domain\:(?!\s+(\r|\n))\s+(?<src_nt_domain>[a-zA-Z0-9._[\S\-\S][^\r|\n]+))
EXTRACT-cs_obj_src_ip_Source_Network_Address = (?msi)Source Network Address:\s+?(?<src_ip>[^\n]+)
EXTRACT-cs_obj_dest_nt_domain_Account_Domain = (?msi)(Account\s+Domain\:.*?(Account\s+Domain\:)|Account\s+Domain\:)(?!\s+(\r|\n))\s+(?<dest_nt_domain>[a-zA-Z0-9._[\S\-\S][^\r|\n]+)
EXTRACT-cs_obj_dest_nt_domain_Group_Domain = (?msi)(Group\s+Domain\:.*?(Group\s+Domain\:)|Group\s+Domain\:)(?!\s+(\r|\n))\s+(?<dest_nt_domain>[a-zA-Z0-9._[\S\-\S][^\r|\n]+)
EXTRACT-cs_obj_objectGUID_GUID = GUID\:\s+\{(?<obj_GUID>[^\}]+)
EXTRACT-cs_obj_session_id = (?msi)(Logon\s+ID\:.*?(Logon\s+ID\:)|Logon\s+ID\:)(?!\s+(\r|\n))\s+(?<session_id>[a-zA-Z0-9._[\S\-\S][^\r|\n]+)
EXTRACT-cs_obj_object_type_group = (?msi)(?:Object Type\:\s+group(\s+|\n|\r).*?(Object\sName|DN)\:\s+(?<group_obj_dn>[^(\r|\n)]+))
EXTRACT-cs_obj_object_type_user = (?msi)(?:Object Type\:\s+user(\s+|\n|\r).*?(Object\sName|DN)\:\s+(?<user_obj_dn>[^(\r|\n)]+))
EXTRACT-cs_obj_object_type_ou = (?msi)(?:Object Type\:\s+organizationalUnit(\s+|\n|\r).*?(Object\sName|DN)\:\s+(?<ou_obj_dn>[^(\r|\n)]+))
EXTRACT-cs_obj_object_type_gpo = (?msi)(?:Object Type\:\s+groupPolicyContainer(\s+|\n|\r).*?(Object\sName|DN)\:\s+(?<gpo_obj_dn>[^(\r|\n)]+))
EXTRACT-cs_obj_object_type_computer = (?msi)(?:Object Type\:\s+computer(\s+|\n|\r).*?(Object\sName|DN)\:\s+(?<comp_obj_dn>[^(\r|\n)]+))
EXTRACT-cs_obj_type_class = (?msi)(?:Object(\sType\:|\:))(\s+|\n|\r)(?:.*Class\:)\s+(?<obj_type>[^(\r|\n)]+)
EXTRACT-cs_obj_type_only = (?msi)(?:Object Type\:(?!\s+(\r|\n))\s+(?<obj_type>[^(\r|\n)]+))
EXTRACT-cs_obj_type_taskcat = (?msi)(?:TaskCategory\=)(\s|)(Security|)(?<obj_type>[^\s]+)(\sAccount\s|\s)Management
EXTRACT-cs_obj_type_action = (?msi)(?:Message=A)\s(?<obj_type>[^\s]+)\s(account|type)\swas\s(?<msad_action>[^(\.|\s)]+)
EXTRACT-cs_obj_type_member = (?msi)(?:Message=A)\s+member\s+was\s+(?<msad_action>\S+)\s+(to|from)\s+a\s+(?<MSADGroupClass>\S+)\-(?<MSADGroupClassID>(enabled|disabled))\s(?<MSADGroupType>(\S+|\S+\s\S+))\s+(?<obj_type>group)\.
EXTRACT-cs_obj_type_group = (?msi)(?:Message=A)\s+(?<MSADGroupClass>\S+)\-(?<MSADGroupClassID>(enabled|disabled))\s(?<MSADGroupType>(\S+|\S+\s\S+))\s(?<obj_type>group)\swas\s(?<msad_action>[^\.]+)\.
EXTRACT-cs_obj_dir_svcs_user_obj_dn = (?msi)(?:Object\:)(.*?DN\:\s+)(?<user_obj_dn>[^\r|\n]+)(.*?Class\:\s+user)
EXTRACT-cs_obj_dir_svcs_comp_obj_dn = (?msi)(?:Object\:)(.*?DN\:\s+)(?<comp_obj_dn>[^\r|\n]+)(.*?Class\:\s+computer)
EXTRACT-cs_obj_dir_svcs_group_obj_dn = (?msi)(?:Object\:)(.*?DN\:\s+)(?<group_obj_dn>[^\r|\n]+)(.*?Class\:\s+group)(\r|\n)
EXTRACT-cs_obj_dir_svcs_gpo_obj_dn = (?msi)(?:Object\:)(.*?DN\:\s+)(?<gpo_obj_dn>[^\r|\n]+)(.*?Class\:\s+groupPolicyContainer)(\r|\n)
EXTRACT-cs_obj_dir_svcs_ou_obj_dn = (?msi)(?:Object\:)(.*?DN\:\s+)(?<ou_obj_dn>[^\r|\n]+)(.*?Class\:\s+organizationalUnit)
EXTRACT-cs_obj_dir_svcs_changes_object_guid = (?msi)(Object Type\:|Object\:)(\s+|\n|\r).*(Object\sName|DN)\:\s+CN(=\"|=\{)(?<Object_Name_Guid>[^(\"|\})]+)
EXTRACT-cs_obj_dir_svcs_mb_user_obj_dn = (?msi)(?:LDAP Display Name\:\s+member)(.*?Value\:)\s+(?<member_obj_dn>CN[^(\r|\n)]+)
EXTRACT-cs_obj_dir_svcs_changes_msad_action = (?msi)Message\=A\sdirectory\sservice\sobject\swas\s(?<msad_action>[^\.]+)
REPORT-cs_obj_cs_changed_attributes = cs_obj_cs_changed_attributes_values
EXTRACT-cs_obj_cd_dir_svc_action = (?msi)Operation:(\s|\r|\n).*(?:Type:)\s+(?<dir_svcs_action>[^(\r|\n)]+)
EVAL-user_obj_email = if(isnull(user_obj_email),if(match(user,"(?=.{1,64}@\S)"),lower(user),if(isnull(User_Principal_Name),NULL,lower(User_Principal_Name))),lower(user_obj_email))
EVAL-user_type = case(match(user,"\$(\,|\@|$)"),"computer",match(user,"SYSTEM|NoGuestsAllowed|ANONYMOUS|NT AUTHORITY|DWM-|LOCAL SERVICE|NETWORK SERVICE"),"system",isnotnull(user),"user",isnotnull(comp_obj_sam),"computer")
EVAL-src_user_type = case(match(src_user,"\$(\,|\@|$)"),"computer",match(src_user,"SYSTEM|NoGuestsAllowed|ANONYMOUS|NT AUTHORITY|DWM-|LOCAL SERVICE|NETWORK SERVICE"),"system",isnotnull(src_user),"user",isnotnull(comp_obj_sam),"computer")
EVAL-group_obj_ldap_v = if(Class=="group",LDAP_Display_Name."|".Value,NULL)
EVAL-user_obj_ldap_v = if(Class=="user",LDAP_Display_Name."|".Value,NULL)
EVAL-gpo_obj_ldap_v = if(Class=="groupPolicyContainer",LDAP_Display_Name."|".Value,NULL)
EVAL-ou_obj_ldap_v = if(Class=="organizationalUnit",LDAP_Display_Name."|".Value,NULL)
EVAL-comp_obj_ldap_v = if(Class=="computer",LDAP_Display_Name."|".Value,NULL)
EVAL-MSADChangedAttributes = if(isnotnull(Old_DN),"Object Moved - ########From DN: ".replace(Old_DN,"\x5C{1}","")."########To DN: ".replace(New_DN,"\x5C{1}",""),MSADChangedAttributes)
EVAL-Old_DN = lower(replace(Old_DN,"\x5C{1}",""))
EVAL-New_DN = lower(replace(New_DN,"\x5C{1}",""))
EVAL-DN = lower(replace(DN,"\x5C{1}",""))
EVAL-group_dn = if(ObjectClass="group",lower(replace(ObjectDN,"\x5C{1}","")),lower(replace(group_dn,"\x5C{1}","")))
EVAL-user_obj_dn = lower(replace(user_obj_dn,"\x5C{1}",""))
EVAL-user_group = lower(replace(user_group,"\x5C{1}",""))
EVAL-Group_Name = lower(replace(Group_Name,"\x5C{1}",""))
EVAL-group_obj_dn = lower(replace(group_obj_dn,"\x5C{1}",""))
EVAL-group_obj_id = lower(replace(group_obj_id,"\x5C{1}",""))
EVAL-group_obj_lkp=if(isnull(user_group),if(isnull(Group_Name),if(isnull(group_obj_dn),if(isnull(group_obj_id),if(isnull(group_dn),NULL,lower(replace(group_dn,"\x5C{1}",""))),lower(replace(group_obj_id,"\x5C{1}",""))),lower(replace(group_obj_dn,"\x5C{1}",""))),lower(replace(Group_Name,"\x5C{1}",""))),lower(replace(user_group,"\x5C{1}","")))
EVAL-comp_obj_dn = lower(replace(comp_obj_dn,"\x5C{1}",""))
EVAL-comp_obj_sam = lower(replace(comp_obj_dn,"\x5C{1}",""))
EVAL-ou_obj_dn = lower(replace(ou_obj_dn,"\x5C{1}",""))
EVAL-cn = if(isnull(cn),name,if(match("\x5C{1}",cn),replace(cn,"\x5C{1}",""),cn))
EVAL-distinguishedName = lower(replace(distinguishedName,"\x5C{1}",""))
EVAL-member_obj_dn = lower(replace(member_obj_dn,"\x5C{1}",""))
EVAL-member_obj_sam = if(isnull(member_obj_sam),if(isnull(member_obj_secid),lower(replace(member_obj_dn,"\x5C{1}","")),lower(member_obj_secid)),lower(replace(member_obj_sam,"\x5C{1}","")))
EVAL-member_obj_cn = lower(replace(member_obj_cn,"\x5C{1}",""))
EVAL-member_obj_id = case(isnull(member_obj_sam) AND isnotnull(member_obj_cn),lower(replace(member_obj_cn,"\x5C{1}","")),match(member_obj_sam,"(?i)^CN\="),lower(replace(member_obj_cn,"\x5C{1}","")),isnotnull(member_obj_sam) AND NOT match(member_obj_sam,"(?i)^CN\="),lower(replace(member_obj_sam,"\x5C{1}","")),isnull(member_obj_sam) AND isnull(member_obj_cn),lower(replace(member_obj_dn,"\x5C{1}","")))
EVAL-member_obj_lkp = if(isnull(member_obj_dn),if(isnull(member_obj_cn),if(isnull(member_obj_id),if(isnull(member_obj_sam),NULL,lower(replace(member_obj_sam,"\x5C{1}",""))),lower(replace(member_obj_id,"\x5C{1}",""))),lower(replace(member_obj_cn,"\x5C{1}",""))),lower(replace(member_obj_dn,"\x5C{1}","")))
EVAL-obj_type = lower(obj_type)
LOOKUP-cs_obj_changes = cs_ad_audit_change_event_codes EventCode AS EventCode obj_type AS obj_type OUTPUTNEW change_action AS change_action change_category AS change_category signature AS change_signature


# WinEventLog System Logs - XML format
[source::XmlWinEventLog:System]
# wineventlog cleared
EXTRACT-logname = </SubjectDomainName><Channel>(?<LogName>[^<]+)</Channel>
EXTRACT-user = <SubjectUserName>(?<user>[^<]+)</SubjectUserName>
EVAL-LogName = if(isnull(LogName), "System", LogName)
EVAL-user = coalesce(User, user, "-")


# WinEventLog System Logs - Plain text format
[source::WinEventLog:System]
# wineventlog cleared
EXTRACT-logname = The\s(?<LogName>.+)\slog\sfile\swas\scleared\. in Message
EVAL-LogName = if(isnull(LogName), "System", LogName)
EVAL-user = coalesce(User, user, "-")


[source::WinEventLog:Application]
REPORT-x-mssql_audit_event = mssql_audit_event
REPORT-y-mssql_audit_fields = mssql_audit_fields
REPORT-z-mssql_audit_fields = mssql_audit_field_client_ip

LOOKUP-mssql_action_name = cs_mssql_audit_actions action_id OUTPUT action_name
LOOKUP-mssql_signature = cs_mssql_audit_actions action_id OUTPUTNEW action_name as signature
LOOKUP-mssql_class_type_desc = cs_mssql_audit_class_types class_type OUTPUT class_type_desc

# Authentication datamodel
EVAL-action = if(EventCode=33205, case(action_id="LGIS", "success", action_id="LGIF", "failure"), action) 
EVAL-dest = if(EventCode=33205, server_instance_name, dest)
EVAL-src = if(EventCode=33205, client_ip, src)
EVAL-user = if(EventCode=33205, server_principal_name, user)
EVAL-app = if(EventCode=33205, "MSSQL", app)
EVAL-signature_id = if(EventCode=33205, action_id, signature_id)


######################
#### Tenable #########
######################
[tenable:sc:assets]
EVAL-tenable_uuid = trim(lower(if(isnull(repository_id), "", repository_id).":".if(isnull(ip), "", ip).":".if(isnull(dnsName), "", dnsName)))
# we are using uniqueness of repository_id, ip, and dnsName to create unique id

# For Cyences Assets datamodel
FIELDALIAS-asset_id = hostUUID AS asset_id

EVAL-vendor_product = "Tenable.sc"
EVAL-asset_hostname = mvjoin(mvdedup(mvappend(dnsName, hostname, netbiosName, netbiosNames)), "~~")
EVAL-asset_ip = ip
EVAL-asset_mac_address = macAddress
EVAL-os = coalesce(operatingSystem, operatingSystems)


[tenable:io:assets]
FIELDALIAS-tenable_uuid = uuid AS tenable_uuid

# For Cyences Assets datamodel
FIELDALIAS-asset_id = uuid AS asset_id

EVAL-vendor_product = "Tenable.io"
EVAL-asset_hostname = mvjoin(mvdedup(mvappend(fqdns, hostnames, netbios_names)), "~~")
EVAL-asset_ip = mvjoin(mvdedup(mvappend(ipv4s, ipv6s)), "~~")
EVAL-asset_mac_address = mvjoin(mac_addresses, "~~")
EVAL-os = operating_systems


[tenable:sc:vuln]
EVAL-tenable_uuid = trim(lower(if(isnull(repository_id), "", repository_id).":".if(isnull(ip), "", ip).":".if(isnull(dnsName), "", dnsName)))
EVAL-vul_id = plugin_id
EVAL-vul_name = plugin_name
EVAL-vul_description = description
EVAL-vul_risk_factor = risk_factor
EVAL-vul_synopsis = synopsis
EVAL-vul_version = plugin_version
EVAL-vul_port = port
EVAL-vul_protocol = protocol
EVAL-vul_severity = severity
EVAL-vul_severity_id = severity_id
EVAL-vul_family = plugin_family
EVAL-vul_type = check_type
EVAL-vul_has_patch = if(patchPubDate=-1, "No", "Yes")
EVAL-vul_state = state
EVAL-vul_cpe = mvjoin(cpe, " ,")
EVAL-vul_cve = mvjoin(cve, " ,")
EVAL-vul_solution = solution

# For Cyences Vulnerabilities datamodel
FIELDALIAS-dest_id = hostUUID as dest_id
FIELDALIAS-dest_name = dnsName AS dest_name
FIELDALIAS-status = state AS status
REPORT-last_scan_time = tenable_sc_last_scan_time_extract
FIELDALIAS-published_time = pluginPubDate AS published_time
FIELDALIAS-type = pluginType AS type
# not receiving plugin-type

EVAL-first_found = firstSeen
EVAL-last_found = lastSeen
EVAL-dvc = host
EVAL-os = coalesce(operatingSystem, operatingSystems)


[tenable:io:vuln]
FIELDALIAS-tenable_uuid = asset_uuid AS tenable_uuid
EVAL-vul_id = plugin_id
EVAL-vul_name = plugin_name
EVAL-vul_description = description
EVAL-vul_risk_factor = risk_factor
EVAL-vul_synopsis = synopsis
EVAL-vul_version = plugin_version
EVAL-vul_port = port
EVAL-vul_protocol = protocol
EVAL-vul_severity = severity
EVAL-vul_severity_id = severity_id
EVAL-vul_family = plugin_family
EVAL-vul_type = check_type
EVAL-vul_has_patch = 'plugin.has_patch'
EVAL-vul_in_the_news = 'plugin.in_the_news'
EVAL-vul_state = state
EVAL-vul_cpe = mvjoin(cpe, " ,")
EVAL-vul_cve = mvjoin(cve, " ,")
EVAL-vul_solution = solution

# For Cyences Vulnerabilities datamodel
FIELDALIAS-dest_id = asset_uuid as dest_id
FIELDALIAS-dest_name = asset_fqdn AS dest_name
FIELDALIAS-status = state AS status
FIELDALIAS-last_scan_time = scan.completed_at AS last_scan_time
FIELDALIAS-published_time = plugin.publication_date AS published_time
FIELDALIAS-type = plugin.type AS type

EVAL-first_found = strptime(first_found, "%Y-%m-%dT%H:%M:%S.%NZ")
EVAL-last_found = strptime(last_found, "%Y-%m-%dT%H:%M:%S.%NZ")
EVAL-dvc = host


#####################
#### Nessus #########
#####################
[nessus:pro:vuln]
EVAL-vendor_product = "Nessus:Pro"
FIELDALIAS-nessus_uuid = host_id AS nessus_uuid
FIELDALIAS-vul_id = "plugin.pluginid" AS vul_id
FIELDALIAS-vul_name = "plugin.pluginname" AS vul_name
FIELDALIAS-vul_description = "plugin.pluginattributes.description" AS vul_description, "plugin.pluginattributes.description" AS description
FIELDALIAS-vul_risk_factor = "plugin.pluginattributes.risk_information.risk_factor" AS vul_risk_factor
FIELDALIAS-vul_synopsis = "plugin.pluginattributes.synopsis" AS vul_synopsis
FIELDALIAS-vul_version = "plugin.pluginattributes.plugin_information.plugin_version" AS vul_version
FIELDALIAS-vul_port = "port{}.port" AS vul_port, "port{}.port" as port
FIELDALIAS-vul_protocol = "port{}.protocol" AS vul_protocol, "port{}.protocol" as protocol
FIELDALIAS-vul_severity_id = severity AS vul_severity_id, severity AS severity_id
EVAL-vul_severity = case(vul_severity_id==0, "informational", vul_severity_id==1, "low", vul_severity_id==2, "medium", vul_severity_id==3, "high", vul_severity_id==4, "critical")
EVAL-severity = case(vul_severity_id==0, "informational", vul_severity_id==1, "low", vul_severity_id==2, "medium", vul_severity_id==3, "high", vul_severity_id==4, "critical")
FIELDALIAS-vul_family = "plugin.pluginfamily" as vul_family
FIELDALIAS-vul_type = "plugin.pluginattributes.plugin_information.plugin_type" AS vul_type
EVAL-vul_has_patch = if(isnotnull('plugin.pluginattributes.plugin_information.patch_publication_date'), "true", "false")
# vul_in_the_news - field does not exists
EVAL-vul_state = coalesce(ta_nessus_pro_vuln_status, "open")
# state field does not exist, so we are assuming that the vulnerability is open
EVAL-vul_cpe = mvjoin(mvappend('plugin.pluginattributes.plugin_information.cpe', 'plugin.pluginattributes.vuln_information.cpe'), " ,")
EVAL-vul_cve = mvjoin('plugin.pluginattributes.cvss_score_source', " ,")
EVAL-cve = mvjoin('plugin.pluginattributes.cvss_score_source', " ,")
FIELDALIAS-cvss = "plugin.pluginattributes.risk_information.cvss_base_score" AS cvss, "plugin.pluginattributes.risk_information.cvss_base_score" AS vul_cvss
FIELDALIAS-vul_solution = "plugin.pluginattributes.solution" AS vul_solution, "plugin.pluginattributes.solution" AS solution
# last_fixed - Field not present
# vul_in_the_news - Field not present
# user - Field not present

# For Cyences Vulnerabilities datamodel
FIELDALIAS-dest_id = host_id as dest_id
EVAL-dest_name = coalesce('host-fqdn', 'netbios-name')
EVAL-status = coalesce(ta_nessus_pro_vuln_status, "open")
FIELDALIAS-last_scan_time = "scan.scan_end_timestamp" AS last_scan_time, "scan.scan_end_timestamp" AS last_licensed_scan_date, "scan.scan_end_timestamp" AS last_authenticated_scan_date
FIELDALIAS-published_time = "plugin.pluginattributes.plugin_information.plugin_publication_date" AS published_time
FIELDALIAS-last_modified_time = "plugin.pluginattributes.plugin_information.last_modification_time" AS last_modified_time
FIELDALIAS-os = "operating-system" as os
FIELDALIAS-type = "plugin.pluginattributes.plugin_information.plugin_type" AS type
FIELDALIAS-category = "plugin.pluginfamily" AS category
FIELDALIAS-signature = "plugin.pluginattributes.synopsis" AS signature
# signature_id - field does not exist in the data
EVAL-first_found = strptime(host_start, "%a %b %d%H:%M:%S %Y")
EVAL-last_found = strptime(host_end, "%a %b %d%H:%M:%S %Y")
EVAL-dvc = host

EVAL-has_patch = if(isnotnull('plugin.pluginattributes.plugin_information.patch_publication_date'), "true", "false")


# For Cyences Assets datamodel
FIELDALIAS-asset_id = host_id AS asset_id
# vendor_product - already covered above
EVAL-hostname = mvjoin(mvdedup(mvappend('host-fqdn', 'netbios-name')), "~~")
EVAL-asset_hostname = mvjoin(mvdedup(mvappend('host-fqdn', 'netbios-name')), "~~")
FIELDALIAS-asset_ip = "host-ip" AS asset_ip, "host-ip" AS ip, "host-ip" as dest_ip
FIELDALIAS-asset_mac_address = "mac-address" AS asset_mac_address, "mac-address" AS mac_address
EVAL-os = operating_systems
FIELDALIAS-inventory_fields = "host-ip" AS ip, "host-fqdn" AS fqdns, "netbios-name" AS dnsName, "netbios-name" AS netbios_names, "mac-address" AS mac_addresses, "operating-system" AS operating_systems, host_start AS first_seen, host_end AS last_seen
EVAL-has_plugin_results = if(isnotnull('plugin.pluginid'), "true", "false")
FIELDALIAS-agent = "plugin.pluginattributes.agent" AS asset_type
EVAL-has_agent = if(isnotnull(agent) AND agent!="null", "true", "false")
EVAL-state = "Active"


# This is to support old TA-nessus Add-on (TA-nessus_json) (https://splunkbase.splunk.com/app/2740)
[nessus_json]
# Both inventory and vulnerability details comes into single event
FIELDALIAS-nessus_uuid = hid AS nessus_uuid
FIELDALIAS-inventory_fields = "host-ip" AS ip, "host-fqdn" AS fqdns, "netbios-name" AS dnsName, "netbios-name" AS netbios_names, "mac-address" AS mac_addresses, "operating-system" AS operating_systems, host_start AS first_seen, host_end AS last_seen
EVAL-has_agent = if(isnotnull(agent) AND agent!="null", "true", "false")
EVAL-has_plugin_results = if(isnotnull(plugin_id), "true", "false")

FIELDALIAS-vulnerability_fields = plugin_id AS vul_id, plugin_name AS vul_name, description AS vul_description, risk_factor AS vul_risk_factor, synopsis AS vul_synopsis, in_the_news AS vul_in_the_news, plugin_type as vul_type, cpe AS vul_cpe, cve AS vul_cve, solution as vul_solution

# TODO - Need to work on port and protocol
# relavent fields required_port, required_udp_port
# above fields not only give integers (ports) - need to handle that is these are proven to be the right fields
# EVAL-vul_port = port
# EVAL-vul_protocol = protocol

EVAL-vul_severity = case(risk_factor=="None", "information", risk_factor=="Low", "low", risk_factor=="Medium", "medium", risk_factor=="High", "high", risk_factor=="Critical", "critical")
EVAL-vul_severity_id = case(risk_factor=="None", 0, risk_factor=="Low", 1, risk_factor=="Medium", 2, risk_factor=="High", 3, risk_factor=="Critical", 4)

# EVAL-vul_family = plugin_family - field do not present

EVAL-vul_has_patch = if(isnotnull(patch_publication_date), "true", "false")

EVAL-vul_state = "open"
# EVAL-vul_state = state - field do not present - limitation due to absense of this field
# - for example if there is any vulneability present and it has been fixed then nessus on-prem do not provide it's update
# - in case of tenable:io it rather provides the state of vulnearability like: open, reopen, fixed

# For Cyences Vulnerabilities datamodel
FIELDALIAS-dest_ip = "host-ip" as dest_ip
FIELDALIAS-dest_name = "host-fqdn" as dest_name
FIELDALIAS-published_time = vuln_publication_date as published_time
FIELDALIAS-os = "operating-system" as os
FIELDALIAS-type = plugin_type AS type

EVAL-first_found = strptime(host_start, "%a %b %d%H:%M:%S %Y")
EVAL-last_found = strptime(host_end, "%a %b %d%H:%M:%S %Y")
EVAL-has_patch = if(isnotnull(patch_publication_date), "true", "false")
EVAL-dest_id = coalesce(hostname,'host-ip')
EVAL-vendor_product = "Nessus"
EVAL-status = "open"
EVAL-dvc = host

# For Cyences Assets datamodel
FIELDALIAS-asset_mac_address = "mac-address" as asset_mac_address
FIELDALIAS-asset_ip = "host-ip" as asset_ip
FIELDALIAS-agent = agent as asset_type

EVAL-asset_id = coalesce(hostname,'host-ip')
EVAL-asset_hostname = mvjoin(mvdedup(mvappend('host-fqdn', 'netbios-name')), "~~")
EVAL-state = "Active"


##################
##### Qualys #####
##################

[qualys:hostDetection]
# For Cyences Vulnerabilities datamodel
FIELDALIAS-dest_id = HOST_ID AS dest_id
FIELDALIAS-vul_id = QID AS vul_id
FIELDALIAS-dest_ip = IP AS dest_ip
FIELDALIAS-os = OS AS os
FIELDALIAS-port = PORT AS port
FIELDALIAS-protocol = PROTOCOL AS protocol
FIELDALIAS-tracking_method = TRACKING_METHOD AS tracking_method
FIELDALIAS-last_scan_time = LAST_SCAN_DATETIME AS last_scan_time

EVAL-first_found = strptime(FIRST_FOUND_DATETIME, "%Y-%m-%dT%H:%M:%S.%NZ")
EVAL-last_found = strptime(LAST_FOUND_DATETIME, "%Y-%m-%dT%H:%M:%S.%NZ")
EVAL-status = case(STATUS="ACTIVE" OR STATUS="NEW", "open", STATUS="RE-OPENED", "reopened", STATUS="FIXED", "fixed")
EVAL-dest_name = mvdedup(mvappend(DNS, NETBIOS))

# For Cyences Assets datamodel
FIELDALIAS-asset_id = HOST_ID AS asset_id
FIELDALIAS-asset_ip = IP AS asset_ip
EVAL-asset_hostname = mvjoin(mvdedup(mvappend(DNS, NETBIOS)), "~~")
EVAL-state = "Active"


######################
#### CrowdStrike #####
######################

[crowdstrike:spotlight:vulnerability:json]
# For Cyences Vulnerabilities datamodel
FIELDALIAS-dest_id = falcon_spotlight.aid as dest_id
FIELDALIAS-dest_ip = falcon_spotlight.host_info.local_ip as dest_ip
FIELDALIAS-dest_name = falcon_spotlight.host_info.hostname as dest_name
FIELDALIAS-last_scan_time = falcon_spotlight.updated_timestamp as last_scan_time
FIELDALIAS-vul_id = falcon_spotlight.id as vul_id
FIELDALIAS-published_time = falcon_spotlight.cve.published_date as published_time
FIELDALIAS-description = falcon_spotlight.cve.description as description
FIELDALIAS-os = falcon_spotlight.host_info.os_version as os
FIELDALIAS-status = falcon_spotlight.status as status
FIELDALIAS-severity = falcon_spotlight.cve.severity as severity
FIELDALIAS-cve = falcon_spotlight.cve.id as cve
FIELDALIAS-dvc = host as dvc

EVAL-first_found = strptime('falcon_spotlight.created_timestamp', "%Y-%m-%dT%H:%M:%S.%NZ")
EVAL-last_found = strptime('falcon_spotlight.closed_timestamp', "%Y-%m-%dT%H:%M:%S.%NZ")
EVAL-cvss=mvindex(split(mvindex(split('falcon_spotlight.cve.vector',"/"),0),":"),1)
EVAL-solution=mvjoin('falcon_spotlight.remediation.entities{}.action',":::")
EVAL-has_patch=if(isnotnull('falcon_spotlight.remediation.entities{}.id'), "Yes", "No")
EVAL-vendor_product = "CrowdStrike Spotlight"

# For Cyences Assets datamodel
FIELDALIAS-asset_id = aid as asset_id
FIELDALIAS-asset_hostname = falcon_spotlight.host_info.hostname as asset_hostname
FIELDALIAS-asset_ip = falcon_spotlight.host_info.local_ip as asset_ip


[crowdstrike:device:json]
# For Cyences Assets datamodel
FIELDALIAS-asset_id = falcon_device.device_id as asset_id
FIELDALIAS-os = falcon_device.os_version as os
FIELDALIAS-last_scan_time = falcon_device.last_seen as last_scan_time
FIELDALIAS-asset_type = falcon_device.provision_type_desc as asset_type
FIELDALIAS-asset_hostname = falcon_device.hostname as asset_hostname
FIELDALIAS-asset_ip = falcon_device.local_ip as asset_ip
FIELDALIAS-asset_mac_address = falcon_device.mac_address as asset_mac_address

EVAL-vendor_product = "CrowdStrike Devices"


########################
### Google Workspace ###
########################
[gws:reports:login]
EVAL-domain = mvindex(split('actor.email',"@"),-1)
EVAL-login_challenge_method = replace(login_challenge_method, "\"", "")


[gws:gmail]
FIELDALIAS-attachement_file_extension_type = message_info.attachment{}.file_extension_type as attachement_file_extension_type
FIELDALIAS-num_message_attachments = message_info.num_message_attachments as num_message_attachments
FIELDALIAS-RecipientAddress = message_info.destination{}.address as RecipientAddress
FIELDALIAS-Subject = message_info.subject as Subject
FIELDALIAS-Size = message_info.payload_size as Size
FIELDALIAS-link_domain = message_info.link_domain{} as link_domain
FIELDALIAS-is_spam = message_info.is_spam as is_spam
FIELDALIAS-MessageId = message_info.rfc2822_message_id as MessageId
EVAL-SenderAddress = coalesce('message_info.source.from_header_address', 'message_info.source.address')


############
### O365 ###
############

[ms:o365:reporting:messagetrace]
EVAL-src_user_domain = mvindex(split(SenderAddress, "@"), 1)
EVAL-recipient_domain = mvindex(split(RecipientAddress, "@"), 1)

[o365:reporting:messagetrace]
EVAL-src_user_domain = mvindex(split(SenderAddress, "@"), 1)
EVAL-recipient_domain = mvindex(split(RecipientAddress, "@"), 1)


######################
#### Meraki #########
######################
[meraki]
EXTRACT-src_ip_extract = src=(?<cyences_src_ip>[^\s]+)
EVAL-src_ip = coalesce(cyences_src_ip, src_ip, srcip)
EVAL-src = coalesce(cyences_src_ip, src, srcip)
EXTRACT-dest_ip_extract = dst=(?<cyences_dest_ip>[^\s]+)
EVAL-dest_ip = coalesce(cyences_dest_ip, dest_ip)
EVAL-dest = coalesce(cyences_dest_ip, dest, dest_ip)


##########################
#### Windows DNS Logs ####
##########################
[MSAD:NT6:DNS]
EVAL-message_type = case(direction="Rcv" AND isnull(operation), "QUERY", direction="Snd" AND isnull(operation), "Query to external server", direction="Rcv" AND operation="R", "Response from external server", direction="Snd" AND operation="R", "RESPONSE", 1==1, message_type)
EVAL-query = replace(replace(replace(query, "\(\d+\)$", ""), "^\(\d+\)", ""), "\(\d+\)", ".")
EVAL-record_type = if(questiontype="A", "ANY", questiontype)


##############################
#### Bind Server DNS Logs ####
##############################
[isc:bind:query] 
EXTRACT-src_ip_port = client\s+.*\s+(?<src>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})
EXTRACT-query_and_questiontype = query:\s+(?<query>[^\s]+)\s+IN\s+(?<questiontype>[^\s]+)\s 
# Domain extraction for domain .*?(?<domain>[^./:]+\.(\S{2,3}|\S{2,3}.\S{2,3}))$ in query 
EVAL-message_type = "QUERY" 
EVAL-record_type = if(questiontype="A", "ANY", questiontype) 
EVAL-reply_code = "NoError" 

[isc:bind:queryerror]
EXTRACT-src_ip_port = client\s+.*\s+(?<src>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})
EXTRACT-query_and_questiontype_and_reply_code = query\s+failed\s+\((?<reply_code>[^\)]+)\)\s+for\s+(?<query>.+)\/IN\/(?<questiontype>[^\s]+)\s+at\s+ 
EVAL-message_type = "QUERY" 
EVAL-record_type = if(questiontype="A", "ANY", questiontype) 
EVAL-reply_code = if(isnull(reply_code), "Error", reply_code)


##########################
#### MSSQL Audit Logs ####
##########################
[mssql:audit:json]
KV_MODE = json
EVAL-class_type_desc= 'properties.class_type_description'

# Authentication datamodel
EVAL-action = case('properties.action_name'="DATABASE AUTHENTICATION SUCCEEDED", "success", 'properties.action_name'="DATABASE AUTHENTICATION FAILED", "failure")
EVAL-dest = 'properties.server_instance_name'
EVAL-src = 'properties.client_ip'
EVAL-user = 'properties.database_principal_name'
EVAL-app = 'properties.application_name'
EVAL-signature_id = 'properties.action_id'
EVAL-signature = 'properties.action_name'
